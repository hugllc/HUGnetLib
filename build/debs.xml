<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by PHP Project Wizard (PPW) 1.0.4 on Mon Oct 3 15:21:39 CDT 2011 -->

<project name="deb" default="build" basedir=".">
    <property name="deb.phpsetup" value="${basedir}/deb/hugnetlib"/>
    <property name="deb.webapisetup" value="${basedir}/deb/hugnetlib-webapi"/>
    <property name="deb.webapirosetup" value="${basedir}/deb/hugnetlib-rowebapi"/>
    <property name="deb.jssetup" value="${basedir}/deb/hugnetlib-js"/>
    <property name="deb.imagesetup" value="${basedir}/deb/hugnetlib-image"/>
    <property name="deb.phpsrc" value="${basedir}/src/php"/>
    <property name="deb.webapisrc" value="${basedir}/src/webapi/html"/>
    <property name="deb.phpstaging" value="${basedir}/build/debphp"/>
    <property name="deb.webapistaging" value="${basedir}/build/debwebapi"/>
    <property name="deb.webapirostaging" value="${basedir}/build/debrowebapi"/>
    <property name="deb.jsstaging" value="${basedir}/build/debjs"/>
    <property name="deb.imagestaging" value="${basedir}/build/debimage"/>
    <property name="deb.release" value="" />
    <property name="deb.versionfile" value="${basedir}/src/php/VERSION.TXT" />

    <exec executable="grep" failonerror="true"
        outputproperty="deb.version" errorproperty="deb.versionerror">
        <arg line='-o -e "[0-9]\{1,\}\.[0-9]\{1,\}\.[0-9]\{1,\}[~alpharc0-9]\{0,\}" ${deb.versionfile}'
            />
    </exec>
    <property name="deb.builddir" value="${basedir}/rel" />
    <property name="deb.phpoutputfile" value="${deb.builddir}/HUGnetLib_${deb.version}${deb.release}_all.deb" />
    <property name="deb.webapioutputfile" value="${deb.builddir}/HUGnetLib-webapi_${deb.version}${deb.release}_all.deb" />
    <property name="deb.webapirooutputfile" value="${deb.builddir}/HUGnetLib-rowebapi_${deb.version}${deb.release}_all.deb" />
    <property name="deb.jsoutputfile" value="${deb.builddir}/HUGnetLib-js_${deb.version}${deb.release}_all.deb" />
    <property name="deb.imageoutputfile" value="${deb.builddir}/HUGnetLib-image_${deb.version}${deb.release}_all.deb" />
    <property name="deb.postloc" value="hugnet.int.hugllc.com:/home/reprepro/incoming/" />

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${deb.phpstaging}" failonerror="false"/>
        <delete dir="${deb.webapistaging}" failonerror="false"/>
        <delete dir="${deb.webapirostaging}" failonerror="false"/>
        <delete dir="${deb.jsstaging}" failonerror="false"/>
        <delete dir="${deb.imagestaging}" failonerror="false"/>
        <delete failonerror="false">
            <fileset dir="${deb.builddir}" includes="*.deb"/>
        </delete>
    </target>

    <target name="phpsetup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib 'v${deb.version}'</echo>

        <mkdir dir="${deb.phpstaging}"/>
        <copy todir="${deb.phpstaging}">
            <fileset dir="${deb.phpsetup}" excludes="**/*~"/>
        </copy>
        <mkdir dir="${deb.phpstaging}/usr/share/php/HUGnetLib"/>
        <copy todir="${deb.phpstaging}/usr/share/php/HUGnetLib">
            <fileset dir="${deb.phpsrc}" excludes="**/*~"/>
        </copy>
        <copy todir="${deb.phpstaging}/usr/share/HUGnetLib/sql">
            <fileset dir="${basedir}/sql" excludes="**/*~"/>
        </copy>
        <delete dir="${deb.phpstaging}/usr/share/php/HUGnetLib/webapi"/>
        <chmod file="${deb.phpstaging}/DEBIAN/postinst" perm="ugo+rx"/>
        <chmod file="${deb.phpstaging}/DEBIAN/prerm" perm="ugo+rx"/>
        <chmod file="${deb.phpstaging}/DEBIAN/config" perm="ugo+rx"/>
        <chmod file="${deb.phpstaging}/usr/**" perm="0755" type="dir"/>
        <chmod file="${deb.phpstaging}/usr/**" perm="0644" type="file"/>
        <replaceregexp file="${deb.phpstaging}/DEBIAN/control"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
    </target>
    <target name="phpdeb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="fakeroot" failonerror="true">
            <arg line="dpkg-deb --build ${deb.phpstaging}
                       ${deb.phpoutputfile}"/>
        </exec>
    </target>
    <target name="webapisetup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib-webapi 'v${deb.version}'</echo>

        <mkdir dir="${deb.webapistaging}"/>
        <copy todir="${deb.webapistaging}">
            <fileset dir="${deb.webapisetup}" excludes="**/*~"/>
        </copy>
        <mkdir dir="${deb.webapistaging}/var/www/html/HUGnetLib"/>
        <copy todir="${deb.webapistaging}/var/www/html/HUGnetLib">
            <fileset dir="${deb.webapisrc}" includes="*.php" excludes="**/*~ *.js"/>
        </copy>
        <chmod file="${deb.webapistaging}/DEBIAN/postinst" perm="0755"/>
        <chmod file="${deb.webapistaging}/DEBIAN/prerm" perm="0755"/>
        <replaceregexp file="${deb.webapistaging}/DEBIAN/control" byline="yes"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
        <delete file="${deb.webapistaging}/var/www/html/HUGnetLib/HUGnetLibAPI_RO.php" />
    </target>
    <target name="webapirosetup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib-rowebapi 'v${deb.version}'</echo>

        <mkdir dir="${deb.webapirostaging}"/>
        <copy todir="${deb.webapirostaging}">
            <fileset dir="${deb.webapirosetup}" excludes="**/*~ *.js"/>
        </copy>
        <mkdir dir="${deb.webapirostaging}/var/www/html/HUGnetLib"/>
        <copy todir="${deb.webapirostaging}/var/www/html/HUGnetLib">
            <fileset dir="${deb.webapisrc}" includes="*.php"/>
        </copy>
        <chmod file="${deb.webapirostaging}/DEBIAN/postinst" perm="0755"/>
        <chmod file="${deb.webapirostaging}/DEBIAN/prerm" perm="0755"/>
        <replaceregexp file="${deb.webapirostaging}/DEBIAN/control" byline="yes"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
        <delete file="${deb.webapirostaging}/var/www/html/HUGnetLib/HUGnetLibAPI.php" />
        <move file="${deb.webapirostaging}/var/www/html/HUGnetLib/HUGnetLibAPI_RO.php"
            toFile="${deb.webapirostaging}/var/www/html/HUGnetLib/HUGnetLibAPI.php"
        />
    </target>
    <target name="jssetup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib-js 'v${deb.version}'</echo>

        <mkdir dir="${deb.jsstaging}"/>
        <copy todir="${deb.jsstaging}">
            <fileset dir="${deb.jssetup}" excludes="**/*~"/>
        </copy>
        <mkdir dir="${deb.jsstaging}/var/www/html/HUGnetLib"/>
        <copy todir="${deb.jsstaging}/var/www/html/HUGnetLib">
            <fileset dir="${deb.webapisrc}" includes="*.js"/>
        </copy>
        <chmod file="${deb.jsstaging}/DEBIAN/postinst" perm="0755"/>
        <chmod file="${deb.jsstaging}/DEBIAN/prerm" perm="0755"/>
        <replaceregexp file="${deb.jsstaging}/DEBIAN/control" byline="yes"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
        <delete file="${deb.jsstaging}/var/www/html/HUGnetLib/HUGnetLibAPI_RO.php" />
    </target>
    <target name="imagesetup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib-image 'v${deb.version}'</echo>

        <mkdir dir="${deb.imagestaging}"/>
        <copy todir="${deb.imagestaging}">
            <fileset dir="${deb.imagesetup}" excludes="**/*~"/>
        </copy>
        <mkdir dir="${deb.imagestaging}/var/www/html/HUGnetLib"/>
        <mkdir dir="${deb.imagestaging}/var/www/html/HUGnetLib/images"/>
        <copy todir="${deb.imagestaging}/var/www/html/HUGnetLib/images">
            <fileset dir="${deb.webapisrc}/images" />
        </copy>
        <chmod file="${deb.imagestaging}/DEBIAN/postinst" perm="0755"/>
        <chmod file="${deb.imagestaging}/DEBIAN/prerm" perm="0755"/>
        <replaceregexp file="${deb.imagestaging}/DEBIAN/control" byline="yes"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
    </target>
    <target name="webapideb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="fakeroot" failonerror="true">
            <arg line="dpkg-deb --build ${deb.webapistaging}
                       ${deb.webapioutputfile}"/>
        </exec>
    </target>
    <target name="webapirodeb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="fakeroot" failonerror="true">
            <arg line="dpkg-deb --build ${deb.webapirostaging}
                       ${deb.webapirooutputfile}"/>
        </exec>
    </target>
    <target name="jsdeb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="fakeroot" failonerror="true">
            <arg line="dpkg-deb --build ${deb.jsstaging}
                       ${deb.jsoutputfile}"/>
        </exec>
    </target>
    <target name="imagedeb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="fakeroot" failonerror="true">
            <arg line="dpkg-deb --build ${deb.imagestaging}
                 ${deb.imageoutputfile}"/>
        </exec>
    </target>
    <target name="sign" description="sign the deb">
        <exec executable="dpkg-sig" failonerror="true" dir="${deb.builddir}">
            <arg line="-s builder
                       ${deb.outputfile}"/>
        </exec>
    </target>
    <target name="post" description="post the deb" depends="build">
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.phpoutputfile}
                        ${deb.postloc}main/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapioutputfile}
                        ${deb.postloc}main/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapirooutputfile}
                        ${deb.postloc}main/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.jsoutputfile}
                        ${deb.postloc}main/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.imageoutputfile}
                        ${deb.postloc}main/"/>
        </exec>
    </target>
    <target name="testpost" description="post the deb" depends="build">
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.phpoutputfile}
                        ${deb.postloc}testing/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapioutputfile}
                        ${deb.postloc}testing/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapirooutputfile}
                        ${deb.postloc}testing/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.jsoutputfile}
                        ${deb.postloc}testing/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.imageoutputfile}
                        ${deb.postloc}testing/"/>
        </exec>
    </target>
    <target name="rcpost" description="post the deb" depends="build">
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.phpoutputfile}
                        ${deb.postloc}rc/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapioutputfile}
                        ${deb.postloc}rc/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.webapirooutputfile}
                        ${deb.postloc}rc/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.jsoutputfile}
                        ${deb.postloc}rc/"/>
        </exec>
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.imageoutputfile}
                        ${deb.postloc}rc/"/>
        </exec>
    </target>
    <target name="postclean" description="build the deb">
        <delete dir="${deb.phpstaging}"/>
        <delete dir="${deb.webapistaging}"/>
    </target>
    <target name="build" depends="clean,phpsetup,webapisetup,webapirosetup,jssetup,imagesetup,phpdeb,webapideb,webapirodeb,jsdeb,webapideb,imagedeb"/>

</project>
