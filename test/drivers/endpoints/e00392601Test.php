<?php
/**
 *   Tests the 00392800 endpoint class
 *
 *   <pre>
 *   HUGnetLib is a library of HUGnet code
 *   Copyright (C) 2007 Hunt Utilities Group, LLC
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation; either version 3
 *   of the License, or (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *   </pre>
 *
 *   @license http://opensource.org/licenses/gpl-license.php GNU Public License
 *   @package HUGnetLib
 *   @subpackage Test
 *   @copyright 2007 Hunt Utilities Group, LLC
 *   @author Scott Price <prices@hugllc.com>
 *   @version $Id: e00392601Test.php 443 2007-11-13 03:23:50Z prices $
 *
 */

// Call e00392601Test::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "00392800Test::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(__FILE__).'/../endpointTestBase.php';
require_once dirname(__FILE__).'/../../../drivers/endpoints/e00392601.php';

/**
 * Test class for endpoints.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 09:06:08.
 */
class e00392601Test extends endpointTestBase {
    public $class = "e00392601";
    /**
     *  Test cases for the InterpConfig routine
     */
     var $InterpConfigTestCases = array(
         array(
             "Info" => array(
                 "RawSetup" => "00000000E800392801410039201343000005FFFFFF500102020202020202027070707070707070",
                 "HWPartNum" => "0039-28-01-A",
                 "FWPartNum" => "0039-20-13-C",
                 "FWVersion" => "00.00.05",
                 "DeviceID" => "0000E8",
                 "SerialNum" => 232,
                 "Driver" => "e00392601",
                 "DeviceGroup" => "FFFFFF",
             ),
             "Return" => array(  
                 "RawSetup" => "00000000E800392801410039201343000005FFFFFF500102020202020202027070707070707070",
                 "HWPartNum" => "0039-28-01-A",
                 "FWPartNum" => "0039-20-13-C",
                 "FWVersion" => "00.00.05",
                 "DeviceID" => "0000E8",
                 "SerialNum" => 232,
                 "Driver" => "e00392601",
                 "DeviceGroup" => "FFFFFF",
                 "HWName" => "0039-28 Endpoint",
                 "NumSensors" => 16,
                 "Function" => "Sensor Board",
                 "TimeConstant" => 1,
                 "DriverInfo" => "0102020202020202027070707070707070",
                 "Types" => array(2,2,2,2,2,2,2,2,112,112,112,112,112,112,112,112),
            ),
         ),
     );

     var $InterpSensorsTestCases = array(
        array(
            "Info" => array(
            ),
            "Packets" => array(
            ),
            "Return" => array(
            ),
        ),
    );

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("e00392601Test");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }
    public static function dataDevicesFirmware() {
        return parent::devicesArrayDataSource("e00392601", "fw");
    }

    public static function dataDevicesHardware() {
        return parent::devicesArrayDataSource("e00392601", "hw");
    }
    public static function dataDevicesVersion() {
        return parent::devicesArrayDataSource("e00392601", "ver");
    }
    public static function dataConfigArray() {
        return parent::dataConfigArray("e00392601");
    }


    public function testCheckRecord() {
        // This test is meaningless on this driver
    }
}

// Call e00392601Test::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "e00392601Test::main") {
    e00392601Test::main();
}
?>
