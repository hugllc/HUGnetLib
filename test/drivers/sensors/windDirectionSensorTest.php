<?php
/**
 * Tests the wind direction  sensor class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Sensors
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */

require_once dirname(__FILE__).'/../sensorTestBase.php';
require_once dirname(__FILE__).'/../../../drivers/sensors/windDirectionSensor.php';

/**
 * Test class for sensor.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 09:08:37.
 *
 * @category   Sensors
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class WindDirectionSensorTest extends sensorTestBase
{
    var $class = "windDirectionSensor";

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
    }
    /**
    * data provider for testSensorArray*
    *
    * @return array
    */
    public static function dataSensorArray()
    {
        return sensorTestBase::sensorArrayDataSource("windDirectionSensor");
    }

    /**
    * Data provider for testGetCapacitance
    *
    * @return array
    */
    public static function dataMaximumIncSensor()
    {
        return array(
            array(0x01, array(), 0, 0, 0, 0.0),
            array(0x04, array(), 0, 0, 0, 90.0),
            array(0x10, array(), 0, 0, 0, 180.0),
            array(0x40, array(), 0, 0, 0, 270.0),
            array(0x02, array(), 0, 0, 0, 45.0),
            array(0x08, array(), 0, 0, 0, 135.0),
            array(0x20, array(), 0, 0, 0, 225.0),
            array(0x80, array(), 0, 0, 0, 315.0),
            array(0x03, array(), 0, 0, 0, 22.5),
            array(0x81, array(), 0, 0, 0, 337.5),
            array(0x06, array(), 0, 0, 0, 67.5),
            array(0x0C, array(), 0, 0, 0, 112.5),
            array(0x18, array(), 0, 0, 0, 157.5),
            array(0x30, array(), 0, 0, 0, 202.5),
            array(0x60, array(), 0, 0, 0, 247.5),
            array(0xC0, array(), 0, 0, 0, 292.5),
            // Two cardinal directions
            array(0x05, array(), 0, 0, 0, null),
            // No Bits set
            array(0x00, array(), 0, 0, 0, null),
            // Cardinal and ordinal not 45deg from eachother
            array(0x21, array(), 0, 0, 0, null),
            // Two ordinal directions
            array(0x0A, array(), 0, 0, 0, null),
        );
    }
    /**
    * test
    *
    * @param int   $ndir   This is an 8 bit bit field returned by the sensor
    * @param array $sensor This is the array of sensor information for this
    *  sensor.  This is not used by this sensor.
    * @param int   $TC     The timeconstant.  This is not used by this sensor.
    * @param mixed $extra  Extra parameters for the sensor
    * @param float $deltaT The time difference
    * @param float $expect The expected current
    *
    * @return null
    *
    * @dataProvider dataMaximumIncSensor
    * @covers windDirectionSensor::maximumIncSensor
    */
    public function testMaximumIncSensor(
        $ndir,
        $sensor,
        $TC,
        $extra,
        $deltaT,
        $expect
    ) {
        parent::sensorTest(
            "windDirectionSensor",
            "maximumIncSensor",
            $ndir,
            $sensor,
            $TC,
            $extra,
            $deltaT,
            $expect
        );
    }

}

?>
