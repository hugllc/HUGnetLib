<?php
/**
 * Tests the filter class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2011 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Default
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */

/** Get our classes */
require_once dirname(__FILE__)
    .'/../../../plugins/sensors/PotDirectionDeviceSensor.php';
require_once dirname(__FILE__).'/../../stubs/DummyDeviceContainer.php';
require_once dirname(__FILE__).'/DeviceSensorPluginTestBase.php';

/**
 * Test class for filter.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 08:44:56.
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Default
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class PotDirectionDeviceSensorTest extends DeviceSensorPluginTestBase
{

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
        $config = array(
        );
        $this->config = &ConfigContainer::singleton();
        $this->config->forceConfig($config);
        $this->socket = &$this->config->sockets->getSocket("default");
        $this->d = new DummyDeviceContainer();
        $this->o = new PotDirectionDeviceSensor(
            array(
            ),
            $this->d
        );
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
        unset($this->o);
    }

    /**
    * Data provider for testRegisterPlugin
    *
    * @return array
    */
    public static function dataRegisterPlugin()
    {
        return array(
            array("PotDirectionDeviceSensor"),
        );
    }
    /**
     * Data provider for testGetReading
     *
     * @return array
     */
    public static function dataGetReading()
    {
        return array(
            array(   // #0
                array('extra' => array(10, 0, 0, 180, 10)),
                65535,
                0,
                180.0
            ),
            array(   // #1
                array('extra' => array(10, 0, 1, 180, 10)),
                1150,
                0,
                343.512
            ),
            array(   // #2
                array('extra' => array(10, 1, 0, 1, 15)),
                5000,
                0,
                null,
            ),
            array(   // #3
                array('extra' => array(0, 1, 0, 1, 15)),
                5000,
                0,
                null,
            ),
            array(   // #4
                array('extra' => array()),
                0,
                0,
                0.0,
            ),
            array(   // #5
                array('extra' => array()),
                65535,
                0,
                180.0,
            ),
            array(   // #6
                array('extra'=>array()),
                32768,
                0,
                90.0878,
            ),
            array(   // #7
                array('extra'=>array(100, 0, 10, 360, 90)),
                32,
                0,
                315.2201,
            ),
            array(   // #8
                array('extra'=>array(100, 0, 10, 360, 90)),
                65432,
                0,
                44.7251,
            ),
            array(   // #9
                array(
                    'dataType'=> DeviceSensorBase::TYPE_IGNORE,
                ),
                32768,
                0,
                90.0878,
            ),
        );
    }
    /**
    * Generic function for testing sensor routines
    *
    * This is called by using parent::sensorTest()
    *
    * @param array $preload The data to preload into the class
    * @param mixed $A       Data for the sensor to work on
    * @param float $deltaT  The time differenct
    * @param mixed $expect  The return data to expect
    *
    * @return null
    *
    * @dataProvider dataGetReading()
    */
    public function testGetReading($preload, $A, $deltaT, $expect)
    {

        $o = new PotDirectionDeviceSensor($preload, $this->d);
        $ret = $o->getReading($A, $deltaT);
        $this->assertSame($expect, $ret);
    }

}

?>
