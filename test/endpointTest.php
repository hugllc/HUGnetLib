<?php
/**
 * Tests the driver class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
if (!defined("HUGNET_INCLUDE_PATH")) {
    define("HUGNET_INCLUDE_PATH", realpath(dirname(__FILE__)."/.."));
}

require_once HUGNET_INCLUDE_PATH."/endpoint.php";

/**
 * Test class for driver.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 08:44:25.
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class EndpointTest extends PHPUnit_Framework_TestCase
{
    static $socket = 1;

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
        $config["file"]       = ":memory:";
        $config["servers"][0] = array(
            'host' => 'localhost',
            'user' => '',
            'pass' => '',
            'dsn' => "sqlite::memory:",
        );
        $this->o = new endpoint($config);
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
        unset($this->o);
    }

    /**
    * dataProvider for testRegisterSensor
    *
    * @return array
    */
    public static function dataRegisterDriver()
    {
        return array(
            // Empty Configuration
            array(
                array(),
                array(
                    "pluginDir" => realpath(
                        dirname(__FILE__)."/../drivers/endpoints"
                    ),
                    "pluginExt" => "php",
                ),
            ),
            // Configuration not an array
            array(
                "This is not an array",
                array(
                    "pluginDir" => realpath(
                        dirname(__FILE__)."/../drivers/endpoints"
                    ),
                    "pluginExt" => "php",
                ),
            ),
            // Stuff to be remove plus plugin dir and ext set different
            array(
                array(
                    "where" => "This should be removed",
                    "DeviceKey" => "This should be removed",
                    "DeviceKeyType" => "This should be removed",
                    "devInfo" => "This should be removed",
                    "pluginDir" => "/drivers/endpoints",
                    "pluginExt" => "php",
                ),
                array(
                    "pluginDir" => "/drivers/endpoints",
                    "pluginExt" => "php",
                ),
            ),
        );
    }
    /**
    * test setConfig to make sure it is setting things correctly
    *
    * @param array $config The configuration sent to the routine
    * @param array $expect The configuration that is actually stored
    *
    * @return null
    *
    * @dataProvider dataRegisterDriver
    */
    public function testSetConfig($config, $expect)
    {
        $this->o->setConfig($config);
        $this->assertAttributeSame($expect, "_config", $this->o);
    }

}

?>
