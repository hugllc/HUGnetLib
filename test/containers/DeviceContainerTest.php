<?php
/**
 * Tests the filter class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */


require_once dirname(__FILE__).'/../../containers/DeviceContainer.php';
require_once dirname(__FILE__).'/../../containers/PacketContainer.php';
// This removes the test plugin files that we load from the code coverage report
PHPUnit_Util_Filter::addDirectoryToFilter(
    dirname(__FILE__)."/../files/plugins/devices", ".php"
);

/**
 * Test class for filter.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 08:44:56.
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class DeviceContainerTest extends PHPUnit_Framework_TestCase
{

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
        $config = array(
            "PluginDir" => realpath(
                dirname(__FILE__)."/../files/plugins/"
            ),
        );
        $this->config = &ConfigContainer::singleton();
        $this->config->forceConfig($config);
        $this->o = new DeviceContainer(array(
            "DeviceID"  => "000019",
            "HWPartNum" => "0039-CD-01-A",
            "FWPartNum" => "0123-45-67-C",
            "FWVersion" => "0.0.5",
        ));
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
        $this->o = null;
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataConstructor()
    {
        return array(
            // #0
            array(
                "00000000E80039CF01410039246743000302FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "TimeConstant"  => 0,
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #1
            array(
                "00000000E80039CF01410039246743000102FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #2
            array(
                "00000000E80039CE01410039246743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #3
            array(
                "00000000E80039CD01410123456743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #4
            array(
                "00000000E80039CC01410039256743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "TimeConstant"  => 0,
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #5
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                    ),
                    "DriverInfo" => array(
                        "RawDriverInfo"    => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #6
            array(
                array(),
                array(
                    "group"             => "default",
                    "id"                => 0,
                    "DeviceID"          => "000000",
                    "DeviceName"        => "",
                    "HWPartNum"         => "",
                    "FWPartNum"         => "",
                    "FWVersion"         => "",
                    "RawSetup"     => "000000000000000000000000000000000000FFFFFF00",
                    "Active"            => 1,
                    "GatewayKey"        => 0,
                    "ControllerKey"     => 0,
                    "ControllerIndex"   => 0,
                    "DeviceLocation"    => "",
                    "DeviceJob"         => "",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 0,
                    "ActiveSensors"     => 0,
                    "DeviceGroup"       => "FFFFFF",
                    "params"            => array(
                    ),
                    "DriverInfo"        => array(
                        "PacketTimeout" => 0,
                        "TimeConstant"  => 0,
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #7
            array(
                array(
                    "group"             => "default",
                    "DriverInfo"        => array(),
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "asdf",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "e00392100",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                ),
                array(
                    "group"             => "default",
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "asdf",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                    "DriverInfo"        => array(
                        "TimeConstant"  => 0,
                    ),
                    "sensors"            => array(),
                ),
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataConstructor
    */
    public function testConstructor($preload, $expect)
    {
        $o = new DeviceContainer($preload);
        $data = $this->readAttribute($o, "data");
        $this->assertType("object", $data["params"]);
        $data["params"] = $data["params"]->toArray();
        $data["sensors"] = $data["sensors"]->toArray();
        $this->assertSame($expect, $data);
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataFromArray()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                ),
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF1E",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(
                array(),
                array(
                    "group"             => "default",
                    "id"                => 0,
                    "DeviceID"          => "000000",
                    "DeviceName"        => "",
                    "HWPartNum"         => "",
                    "FWPartNum"         => "",
                    "FWVersion"         => "",
                    "RawSetup"     => "000000000000000000000000000000000000FFFFFF00",
                    "Active"            => 1,
                    "GatewayKey"        => 0,
                    "ControllerKey"     => 0,
                    "ControllerIndex"   => 0,
                    "DeviceLocation"    => "",
                    "DeviceJob"         => "",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 0,
                    "ActiveSensors"     => 0,
                    "DeviceGroup"       => "FFFFFF",
                    "params"            => array(
                    ),
                    "DriverInfo"        => array(
                        "PacketTimeout" => 0,
                        "TimeConstant"  => 0,
                    ),
                    "sensors"           => array(),
                ),
            ),
            array(
                array(
                    "group"             => "default",
                    "DriverInfo"        => array(
                    ),
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "e00392100",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                ),
                array(
                    "group"             => "default",
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"    => "00000004D20039210241003922954302010312345614",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                    "DriverInfo"        => array(
                        "TimeConstant"  => 0,
                    ),
                    "sensors"            => array(),
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataFromArray
    */
    public function testFromArray($preload, $expect)
    {
        $this->o->clearData();
        $this->o->fromArray($preload);
        $data = $this->readAttribute($this->o, "data");
        $this->assertType("object", $data["params"]);
        $data["params"] = $data["params"]->toArray();
        $data["sensors"] = $data["sensors"]->toArray();
        $this->assertSame($expect, $data);
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataFromSetupString()
    {
        return array(
            array(
                "00000000E80039CF01410039246743000302FFFFFF50",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                        "TimeConstant" => 0,
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(
                "00000000E80039CF01410039246743000102FFFFFF50",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(
                "00000000E80039CE01410039246743000005FFFFFF1E",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF1E",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(
                "00000000E80039CD01410123456743000005FFFFFF530123456789",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF53".
                        "0123456789",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 83,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "0123456789",
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(
                "00000000E80039CC01410039256743000005FFFFFF2101",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF2101",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 33,
                        ),
                    ),
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                        "TimeConstant" => 1,
                    ),
                    "sensors"            => array(),
               ),
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataFromSetupString
    */
    public function testFromSetupString($preload, $expect)
    {
        $this->o->fromSetupString($preload);
        $data = $this->readAttribute($this->o, "data");
        $this->assertType("object", $data["params"]);
        $data["params"] = $data["params"]->toArray();
        $this->assertType("object", $data["sensors"]);
        $data["sensors"] = $data["sensors"]->toArray();
        $this->assertSame($expect, $data);
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataToSetupString()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                ),
                "00000000E80039CF01410039246743000302FFFFFF50",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF21"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                ),
                "00000000E80039CF01410039246743000102FFFFFF5001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF31"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 32,
                        ),
                    ),
                ),
                "00000000E80039CE01410039246743000005FFFFFF2001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF53"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 48,
                        ),
                    ),
                ),
                "00000000E80039CD01410123456743000005FFFFFF3001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF23",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 64,
                        ),
                    ),
                ),
                "00000000E80039CC01410039256743000005FFFFFF40",
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataToSetupString
    */
    public function testToSetupString($preload, $expect)
    {
        $this->o->fromArray($preload);
        $this->assertSame($expect, (string)$this->o);
    }


    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataHexifyVersion()
    {
        return array(
            array("1.2.3", "010203"),
            array("11.12.13", "111213"),
        );
    }

    /**
    * test
    *
    * @param string $version The version to play with
    * @param string $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHexifyVersion
    */
    public function testHexifyVersion($version, $expect)
    {
        $value = DeviceContainer::hexifyVersion($version);
        $this->assertSame($expect, $value);
    }

    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataHexifyPartNum()
    {
        return array(
            array("0039-20-06-C", "0039200643"),
            array("0039-26-01-P", "0039260150"),
        );
    }

    /**
    * test
    *
    * @param string $partNum The partNum to play with
    * @param string $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHexifyPartNum
    */
    public function testHexifyPartNum($partNum, $expect)
    {
        $value = DeviceContainer::hexifyPartNum($partNum);
        $this->assertSame($expect, $value);
    }
    /**
    * data provider for testSet
    *
    * @return array
    */
    public static function dataSet()
    {
        return array(
            array("FWVersion", "5.3.1", "5.3.1"),
            array("FWVersion", "2.4.1+git", "2.4.1"),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $var    The variable to set
    * @param mixed  $value  The value to set
    * @param mixed  $expect The expected return
    *
    * @return null
    *
    * @dataProvider dataSet
    */
    public function testSet($var, $value, $expect)
    {
        $this->o->$var = $value;
        $data = $this->readAttribute($this->o, "data");
        $this->assertSame($expect, $data[$var]);
    }
    /**
    * data provider for testSet
    *
    * @return array
    */
    public static function dataCall()
    {
        $pkt = new PacketContainer();
        return array(
            array("testCall", "5.3.1", "5.3.1", "5.3.1"),
            array("testCall", "2.4.1+git", "2.4.1+git", "2.4.1+git"),
            array("bugusFunction", "here", null, false),
            array(
                "testCall",
                &$pkt,
                &$pkt,
                &$pkt,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $name   The function to call
    * @param mixed  $value  The value to set
    * @param mixed  $expect The expected data set
    * @param mixed  $return The expected return
    *
    * @return null
    *
    * @dataProvider dataCall
    */
    public function testCall($name, $value, $expect, $return)
    {
        $ret = $this->o->$name($value);
        $this->assertSame($return, $ret);
        $this->assertSame($expect, $GLOBALS[$name]);
    }

    /**
    * data provider for testIsEmpty
    *
    * @return array
    */
    public static function dataIsEmpty()
    {
        return array(
            array(
                array(
                    "DeviceID" => "000000",
                ),
                true,
            ),
            array(
                array(
                    "DeviceID" => "000001",
                ),
                false,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The values to preload
    * @param mixed  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataIsEmpty
    */
    public function testIsEmpty($preload, $expect)
    {
        $this->o->fromAny($preload);
        $this->assertSame($expect, $this->o->isEmpty());
    }

    /**
    * data provider for testIsEmpty
    *
    * @return array
    */
    public static function dataPacketConsumer()
    {
        return array(
            array(  // testDriver
                array(
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF53"
                        ."01234567",
                ),
                array(),
                true,
            ),
            array(  // Defautl driver
                array(
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-AA-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039AA01410123456743000005FFFFFF53"
                        ."01234567",
                ),
                array(),
                false,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The values to preload
    * @param array $pkt     The packet values to preload
    * @param mixed $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataPacketConsumer
    */
    public function testPacketConsumer($preload, $pkt, $expect)
    {
        unset($GLOBALS["packetConsumer"]);
        $this->o->fromAny($preload);
        $p = new PacketContainer($pkt);
        $this->o->packetConsumer($p);
        if ($expect) {
            $this->assertSame($p, $GLOBALS["packetConsumer"]);
        } else {
            $this->assertNull($GLOBALS["packetConsumer"]);
        }
    }

}

?>
