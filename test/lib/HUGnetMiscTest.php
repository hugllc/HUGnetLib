<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Plugins
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */

require_once dirname(__FILE__).'/../../lib/HUGnetMisc.php';


/**
 * Test class for SensorBase.
 * Generated by PHPUnit on 2007-12-13 at 09:08:18.
 *
 * @category   Base
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class HUGnetMiscTest extends PHPUnit_Framework_TestCase
{
    /**
    * @var object The test object
    * @access protected
    */
    protected $o;

    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
        // Almost everything here will be called with the HUGnetMisc:: syntax
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
    }

    /**
    * Tests to make sure that the network function exists
    *
    * return null
    */
    function testGetNetInfo()
    {
        $this->assertTrue(method_exists("HUGnetMisc", "getNetInfo"));
    }
    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataGetYdhms()
    {
        return array(
            array(100000, 0, "1d 3h 46m 40s"),
            array("1234", 0, "20m 34s"),
            array(array(), 0, "0s"),
            array(0, 0, "0s"),
            array(1234567890, 0, "39Y 44d 5h 31m 30s"),
        );
    }
    /**
    * test
    *
    * @param mixed  $val    The value to feed the function
    * @param int    $digits The number of digits
    * @param string $expect The expected return value
    *
    * @return null
    *
    * @dataProvider dataGetYdhms
    */
    public function testGetYdhms($val, $digits, $expect)
    {
        $ret = HUGnetMisc::getYdhms($val, $digits);
        $this->assertEquals($expect, $ret);
    }

    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataGetBytes()
    {
        return array(
            array(10000, 2, "9.77 k bytes"),
            array("1234", 2, "1.21 k bytes"),
            array(array(), 2, "0.00 bytes"),
            array(0, 2, "0.00 bytes"),
        );
    }
    /**
    * test
    *
    * @param mixed  $val    The value to feed the function
    * @param int    $digits The number of digits
    * @param string $expect The expected return value
    *
    * @return null
    *
    * @dataProvider dataGetBytes
    */
    public function testGetBytes($val, $digits, $expect)
    {
        $ret = HUGnetMisc::getBytes($val, $digits);
        $this->assertEquals($expect, $ret);
    }



}

?>
