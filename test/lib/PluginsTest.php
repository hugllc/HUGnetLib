<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007 Hunt Utilities Group, LLC
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Base
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$    
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */
// Call PluginsTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'PluginsTest::main');
}
/** Test framework */
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../lib/plugins.inc.php';

/**
 * Test class for SensorBase.
 * Generated by PHPUnit on 2007-12-13 at 09:08:18.
 *
 * @category   Base
 * @package    HUGnetLibTest
 * @subpackage Sensors
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class PluginsTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    SensorBase
     * @access protected
     */
    protected $o;

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     *
     * @return void
     */
    public static function main()
    {
        include_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('PluginsTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     *
     * @return void
     */
    protected function setUp()
    {
        $this->o = new plugins();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     *
     * @return void
     */
    protected function tearDown()
    {
        unset($this->o);
    }
    
    /**
     * data provider for testConstructor
     *
     * @return array
     *
     * @static
     */
    public static function dataRegisterFunction() 
    {
        return array(
            array("asdf", "fasd", "asdf", "asdf", "asdf"),
        );
    }
    /**
     * test
     *
     * @param mixed  $Name  If an Array, it should contain at least Name["Name"] which is the name of the function.  The
     *     only other semi-required item is Name["Types"]
     *     which is an array of plugin types to register this as.  If it is not included, it will be registered as "ALL_TYPES" which is 
     *     probably not what you want.  None of the other paramters are used in this case.  If it is a string, it is 
     *     just the name of the item.  The other paramters must be used to set the other items.
     * @param string $Type  The type of plugin to register this as.  If ommited plugin will be registered as "ALL_TYPES" which is probably not
     *     what you want.
     * @param string $Title The title of the plugin.  Anything goes, but it should be relatively short.  Optional
     * @param string $Desc  The description of the plugin.  This is freeform text.  Optional
     * @param int $expect The expected value
     *
     * @return void
     *
     * @dataProvider dataRegisterFunction
     */
    public function testRegisterFunction($Name, $Type, $Title, $Desc, $expect) 
    {
    }
}

// Call PluginsTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'PluginsTest::main') {
    PluginsTest::main();
}
?>
