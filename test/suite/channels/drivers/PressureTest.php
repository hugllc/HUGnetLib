<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2012 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
/** This is the HUGnet namespace */
namespace HUGnet\channels\drivers;
/** This is the base class */
require_once dirname(__FILE__)."/DriverTestBase.php";
/** This is a required class */
require_once CODE_BASE.'channels/drivers/Pressure.php';

/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.9.7
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class PressureTest extends DriverTestBase
{
    /** This is the class we are testing */
    protected $class = "Pressure";
    /** This is the units that are valid */
    protected static $units = array("Pa", "bar", "at", "atm", "Torr", "psi");
    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
        parent::setUp();
        $this->o = &Pressure::factory();
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
        parent::tearDown();
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    public static function dataConversions()
    {
        return self::dataConversionsData();
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    public static function dataGetValid()
    {
        return array(
            array(
                "&deg;C",
                array(
                    'Pa' => 'Pa',
                    'bar' => 'bar',
                    'at' => 'at',
                    'atm' => 'atm',
                    'Torr' => 'Torr',
                    'psi' => 'psi',
                ),
            ),
        );
    }

    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    public static function dataValid()
    {
        return array(
            array(
                "%",
                false,
            ),
            array(
                "psi",
                true,
            ),
        );
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    public static function dataNumeric()
    {
        return array(
            array(
                "%",
                false,
            ),
            array(
                "psi",
                true,
            ),
        );
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    public static function dataConvert()
    {
        return array(
            array(
                100, "Pa", "Torr", \HUGnet\channels\Driver::TYPE_RAW,
                true, 13332.2
            ),
            array(
                1.6258, "Pa", "atm", \HUGnet\channels\Driver::TYPE_RAW,
                true, 164732.5592
            ),
            array(
                92.351, "atm", "psi", \HUGnet\channels\Driver::TYPE_RAW,
                true, 6.284116146
            ),
            array(
                1.351, "atm", "at", \HUGnet\channels\Driver::TYPE_RAW,
                true, 1.30755184
            ),
            array(
                1.351, "bar", "atm", \HUGnet\channels\Driver::TYPE_RAW,
                true, 1.36890075
            ),
        );
    }

}
?>
