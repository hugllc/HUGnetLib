<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2012 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
/** This is the HUGnet namespace */
namespace HUGnet\devices;
/** This is a required class */
require_once CODE_BASE.'devices/DevNet.php';
/** This is a required class */
require_once CODE_BASE.'network/Packet.php';
/** This is a required class */
require_once CODE_BASE.'system/System.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummyNetwork.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummyTable.php';
/** This is a required class */
require_once CODE_BASE.'util/VPrint.php';

/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.9.7
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class DevNetTest extends \PHPUnit_Framework_TestCase
{
    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
    }

    /**
    * Data provider for testMatcher
    *
    * @return array
    */
    public static function dataPoll()
    {
        return array(
            array(
                array(
                    "Table" => array(
                        "get" => 21,
                    ),
                    "Network" => array(
                        "send" => \HUGnet\network\Packet::factory(
                            array(
                                "From" => 21,
                                "Reply" => "123456",
                            )
                        ),
                    ),
                ),
                null,
                array(),
                array(
                    "Table" => array(
                        "get" => array(array("id")),
                    ),
                    "Network" => array(
                        "send" => Array(
                            array(
                                array(
                                    "To" => 21,
                                    "Command" => '55',
                                ),
                                null,
                                array(
                                    "block" => true,
                                ),
                            )
                        ),
                    ),
                ),
                \HUGnet\network\Packet::factory(
                    array(
                        "From" => 21,
                        "Reply" => "123456",
                    )
                ),
            ),
        );
    }
    /**
    * Tests the iteration and preload functions
    *
    * @param array $mocks    The data to reset the mocks with
    * @param mixed $callback The function to call on packet reply
    * @param array $config   The configuration array
    * @param array $expect   The expected calls in the mock
    * @param bool  $return   The expected return
    *
    * @return null
    *
    * @dataProvider dataPoll()
    */
    public function testPoll($mocks, $callback, $config, $expect, $return)
    {
        $net   = new \HUGnet\network\DummyNetwork("Network");
        $table = new \HUGnet\DummyTable();
        $net->resetMock($mocks);
        $devnet = &DevNet::factory($net, $table);
        $ret = $devnet->poll($callback, $config);
        $this->assertEquals($return, $ret,  "Return Wrong");
        $ret = $net->retrieve();
        $this->assertEquals($expect, $ret,  "Calls Wrong");

    }
    /**
    * Data provider for testMatcher
    *
    * @return array
    */
    public static function dataConfig()
    {
        return array(
            array(
                array(
                    "Table" => array(
                        "get" => 21,
                    ),
                    "Network" => array(
                        "send" => \HUGnet\network\Packet::factory(
                            array(
                                "From" => 21,
                                "Reply" => "123456",
                            )
                        ),
                    ),
                ),
                null,
                array(),
                array(
                    "Table" => array(
                        "get" => array(array("id")),
                    ),
                    "Network" => array(
                        "send" => Array(
                            array(
                                array(
                                    "To" => 21,
                                    "Command" => '5C',
                                ),
                                null,
                                array(
                                    "block" => true,
                                ),
                            )
                        ),
                    ),
                ),
                \HUGnet\network\Packet::factory(
                    array(
                        "From" => 21,
                        "Reply" => "123456",
                    )
                ),
            ),
        );
    }
    /**
    * Tests the iteration and preload functions
    *
    * @param array $mocks    The data to reset the mocks with
    * @param mixed $callback The function to call on packet reply
    * @param array $config   The configuration array
    * @param array $expect   The expected calls in the mock
    * @param bool  $return   The expected return
    *
    * @return null
    *
    * @dataProvider dataConfig()
    */
    public function testConfig($mocks, $callback, $config, $expect, $return)
    {
        $net   = new \HUGnet\network\DummyNetwork("Network");
        $table = new \HUGnet\DummyTable();
        $net->resetMock($mocks);
        $devnet = &DevNet::factory($net, $table);
        $ret = $devnet->config($callback, $config);
        $this->assertEquals($return, $ret,  "Return Wrong");
        $ret = $net->retrieve();
        $this->assertEquals($expect, $ret,  "Calls Wrong");

    }
}
?>
