<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2014 Hunt Utilities Group, LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2014 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       http://dev.hugllc.com/index.php/Project:HUGnetLib
 */
/** This is the HUGnet namespace */
namespace HUGnet\devices;
/** This is a required class */
require_once CODE_BASE.'devices/WebInterface2.php';
/** This is a required class */
require_once CODE_BASE.'network/packets/Packet.php';
/** This is a required class */
require_once CODE_BASE.'system/System.php';
/** This is a required class */
require_once CODE_BASE.'db/Table.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummySystem.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummyTable.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummyDeviceDriver.php';
/** This is a required class */
require_once CODE_BASE.'db/tables/Firmware.php';



/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2014 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.14.3
 * @link       http://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class WebInterface2Test extends \PHPUnit_Framework_TestCase
{
    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
    }

    /**
    * Data provider for testRemove
    *
    * @return array
    */
    public static function dataWebInterface()
    {

        return array(
            array(  // #0
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                        "now" => 1234,
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "store" => true,
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "put",
                            "subobject" => "",
                            "sid" => "",
                            "data" => array(
                                "a" => "B",
                                "c" => "D",
                                "params" => array(
                                    "e" => "F",
                                    "LastAverage15MIN" => 21, 
                                    "LastAverageHOURLY" => 21, 
                                    "LastAverageDAILY" => 21, 
                                    "LastAverageWEEKLY" => 21,
                                    "LastAverageMONTHLY" => 21, 
                                    "LastAverageYEARLY" => 21, 
                                    "LastAverage30SEC" => 21, 
                                    "LastAverage1MIN" => 21,
                                    "LastAverage5MIN" => 21, 
                                    "LastAverage15MINTry" => 21, 
                                    "LastAverageHOURLYTry" => 21, 
                                    "LastAverageDAILYTry" => 21, 
                                    "LastAverageWEEKLYTry" => 21,
                                    "LastAverageMONTHLYTry" => 21, 
                                    "LastAverageYEARLYTry" => 21, 
                                    "LastAverage30SECTry" => 21, 
                                    "LastAverage1MINTry" => 21,
                                    "LastAverage5MINTry" => 21, 
                                    "LastHistoryPush" => 21, 
                                    "LastMasterRawHistoryPush" => 21,
                                    "LastMasterHistoryPush" => 21
                                ),
                            ),
                        ),
                    ),
                ),
                false,
                array(),
                "",
                array(
                    "Device" => array(
                        "set" => array(
                            array("a", "B"),
                            array("c", "D"),
                        ),
                        "setParam" => array(
                            array("e", "F"),
                            array("LastModified", 1234),
                        ),
                        "store" => array(
                            array(true),
                        ),
                        "isNew" => array(array()),
                    ),
                ),
            ),
            array(  // #1
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "action" => new \HUGnet\DummyBase("Action"),
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "get",
                            "subobject" => "config",
                            "sid" => "",
                        ),
                    ),
                ),
                false,
                array(),
                "",
                array(
                ),
            ),
            array(  // #2
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "action" => new \HUGnet\DummyBase("Action"),
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "get",
                            "subobject" => "config",
                            "sid" => "",
                        ),
                    ),
                    "Action" => array(
                        "config" => true,
                    ),

                ),
                false,
                array(),
                array("Real" => "array"),
                array(
                ),
            ),
            array(  // #3
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "action" => new \HUGnet\DummyBase("Action"),
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "get",
                            "subobject" => "config",
                            "sid" => "w",
                        ),
                    ),
                ),
                false,
                array(),
                "",
                array(
                ),
            ),
            array(  // #4
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "action" => new \HUGnet\DummyBase("Action"),
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "post",
                            "subobject" => "config",
                            "sid" => "",
                        ),
                    ),
                    "Network" => array(
                        "loadConfig" => true,
                    ),
                    "Action" => array(
                        "loadConfig" => true,
                    ),

                ),
                false,
                array(),
                array("Real" => "array"),
                array(
                ),
            ),
            array(  // #5
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                        "now" => 5,
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "action" => new \HUGnet\DummyBase("Action"),
                        "insertVirtual" => true,
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "get",
                            "subobject" => "new",
                            "sid"  => "",
                        ),
                    ),
                    "Network" => array(
                        "loadConfig" => true,
                    ),
                    "Action" => array(
                        "loadConfig" => true,
                    ),

                ),
                false,
                array(),
                array("Real" => "array"),
                array(
                    "Device" => array(
                        "insertVirtual" => array(
                            array(
                                array(),
                            ),
                        ),
                        "setParam" => array(array("Created", 5)),
                        "store" => array(array()),
                        "toArray" => array(array(true)),
                        "isNew" => array(array()),
                    ),
                ),
            ),
            array(  // #6
                new \HUGnet\DummyBase("API"),
                array(
                    "System" => array(
                        "config" => array(
                            "verbose" => 0,
                        ),
                        "device" => new \HUGnet\DummyBase("Device"),
                        "now" => 1234,
                    ),
                    "Device" => array(
                        "load" => true,
                        "toArray" => array(
                            "Real" => "array",
                        ),
                        "network" => new \HUGnet\DummyBase("Network"),
                        "store" => false,
                    ),
                    "API" => array(
                        "args" => new \HUGnet\DummyBase("Args"),
                    ),
                    "Args" => array(
                        "get" => array(
                            "method" => "put",
                            "subobject" => "",
                            "sid" => "",
                            "data" => array(
                                "a" => "B",
                                "c" => "D",
                                "params" => array(
                                    "e" => "F",
                                ),
                            ),
                        ),
                    ),
                ),
                false,
                array(),
                "",
                array(
                    "Device" => array(
                        "set" => array(
                            array("a", "B"),
                            array("c", "D"),
                        ),
                        "setParam" => array(
                            array("e", "F"),
                            array("LastModified", 1234),
                        ),
                        "store" => array(
                            array(true),
                        ),
                        "isNew" => array(array()),
                    ),
                ),
            ),

        );
    }
    /**
    * Tests the iteration and preload functions
    *
    * @param mixed $config   The config to use
    * @param array $mock     The mocks to use
    * @param bool  $readonly Whether the system is read only or not
    * @param array $extra    The extra data to send to execute
    * @param mixed $expect   The system object we are expecting
    * @param array $calls    The calls to expect
    *
    * @return null
    *
    * @dataProvider dataWebInterface()
    */
    public function testWebInterface(
        $config, $mock, $readonly, $extra, $expect, $calls
    ) {
        $system = new \HUGnet\DummySystem("System");
        $system->resetMock($mock);
        $device = new \HUGnet\DummyBase("Device");
        $driver = new \HUGnet\DummyBase("Driver");
        $obj = WebInterface2::factory($system, $device, $driver);
        $ret = $obj->WebAPI2($config, $extra);
        $this->assertEquals($expect, $ret, "Output wrong");
        foreach ((array)$calls as $obj => $call) {
            $this->assertEquals(
                $call, $system->retrieve($obj), "$obj Calls Wrong"
            );
        }
    }

}
?>
