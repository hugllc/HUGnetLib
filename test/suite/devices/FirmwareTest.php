<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2015 Hunt Utilities Group, LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2015 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       http://dev.hugllc.com/index.php/Project:HUGnetLib
 */
/** This is the HUGnet namespace */
namespace HUGnet\devices;
/** This is a required class */
require_once CODE_BASE.'system/System.php';
/** This is a required class */
require_once CODE_BASE.'devices/Firmware.php';
/** This is the dummy table container */
require_once TEST_CONFIG_BASE.'stubs/SystemTableStub.php';
/** This is the dummy table container */
require_once TEST_CONFIG_BASE.'stubs/TableStub.php';
/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2015 Hunt Utilities Group, LLC
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.14.3
 * @link       http://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class FirmwareTest extends \PHPUnit_Framework_TestCase
{
    /** @var The system object */
    protected $sys = null;
    /** @var The system object */
    protected $dev = null;
    /** @var The table object */
    protected $table = null;
    /** @var The test object */
    protected $o = null;
    /** @var Preloaded responses for functions */
    protected $preload = array();
    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
        $this->sys = $this->getMockBuilder("\HUGnet\System")
                        ->disableOriginalConstructor()
                        ->getMock();
        $this->devtable = $this->getMockBuilder('\HUGnet\db\tables\TableStub')
                        ->setConstructorArgs(array(&$this->sys), "Devices")
                        ->getMock();
        $this->dev = $this->getMockBuilder("\HUGnet\SystemTableStub")
                        ->setConstructorArgs(array(&$this->sys, $this->devtable))
                        ->setMethods(array("get"))
                        ->getMock();
        $this->table = $this->getMockBuilder('\HUGnet\db\tables\TableStub')
                        ->setConstructorArgs(array(&$this->sys), "Firmware")
                        ->setMethods(
                            array(
                                "checkHash"
                            )
                        )
                        ->getMock();
        $this->o = Firmware::factory($this->sys, null, $this->table, $this->dev);
        parent::setUp();
        $this->preload = array();
    }
    /**
    * This gets us our database preload
    *
    * @access protected
    *
    * @return null
    */
    public function toArrayMock()
    {
        $array = array();
        if (isset($this->preload["toArray"]) && is_array($this->preload["toArray"])) {
            $array = array_shift($this->preload["toArray"]);
        }
        return $array;
    }
    /**
    * This gets us our database preload
    *
    * @access protected
    *
    * @return null
    */
    public function nextIntoMock()
    {
        $array = array();
        if (isset($this->preload["nextInto"]) && is_array($this->preload["nextInto"])) {
            $array = array_shift($this->preload["nextInto"]);
        }
        return $array;
    }
    /**
    * This gets us our database preload
    *
    * @access protected
    *
    * @return null
    */
    public function getStuffMock($field)
    {
        $array = null;
        var_dump($field);
        if (isset($this->preload["get"]) && is_array($this->preload["get"]) && isset($this->preload["get"][$field])) {
            $array = $this->preload["get"][$field];
        }
        return $array;
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
        parent::tearDown();
    }
    /**
    * data provider for testGetLatest
    *
    * @return array
    */
    public static function dataGetLatest()
    {
        return array(
            array(
                array(
                    "toArray" => array(
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.10",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                    ),
                    "checkHash" => true,
                ),
                array(
                    "group" => "default",
                    "filename" => "",
                    "id" => "5",
                    "Version" => "2.2.10",
                    "Code" => "abc",
                    "CodeHash" => (string)md5("abc"),
                    "Data" => "def",
                    "DataHash" => (string)md5("def"),
                    "FWPartNum" => "0039-20-01-C",
                    "HWPartNum" => "0039-21",
                    "Date" => 1208318061,
                    "FileType" => "SREC",
                    "RelStatus" => 8,
                    "Tag" => "v1.2.3",
                    "Target" => "mega16",
                    "Active" => "1",
                    "md5" => null,
                ),
                true,
            ),
            array(
                array(
                    "toArray" => array(
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.9",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.10",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.8",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                    ),
                    "checkHash" => true,
                ),
                array(
                    "group" => "default",
                    "filename" => "",
                    "id" => "5",
                    "Version" => "2.2.10",
                    "Code" => "abc",
                    "CodeHash" => (string)md5("abc"),
                    "Data" => "def",
                    "DataHash" => (string)md5("def"),
                    "FWPartNum" => "0039-20-01-C",
                    "HWPartNum" => "0039-21",
                    "Date" => 1208318061,
                    "FileType" => "SREC",
                    "RelStatus" => 8,
                    "Tag" => "v1.2.3",
                    "Target" => "mega16",
                    "Active" => "1",
                    "Target" => "mega16",
                    "md5" => null,
                ),
                true,
            ),
            array(
                array(
                    "toArray" => array(
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.10",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.8",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                        array(
                            "group" => "default",
                            "filename" => "",
                            "id" => "5",
                            "Version" => "2.2.9",
                            "Code" => "abc",
                            "CodeHash" => (string)md5("abc"),
                            "Data" => "def",
                            "DataHash" => (string)md5("def"),
                            "FWPartNum" => "0039-20-01-C",
                            "HWPartNum" => "0039-21",
                            "Date" => 1208318061,
                            "FileType" => "SREC",
                            "RelStatus" => 8,
                            "Tag" => "v1.2.3",
                            "Target" => "mega16",
                            "Active" => "1",
                            "md5" => null,
                        ),
                    ),
                    "checkHash" => true,
                ),
                array(
                    "group" => "default",
                    "filename" => "",
                    "id" => "5",
                    "Version" => "2.2.10",
                    "Code" => "abc",
                    "CodeHash" => (string)md5("abc"),
                    "Data" => "def",
                    "DataHash" => (string)md5("def"),
                    "FWPartNum" => "0039-20-01-C",
                    "HWPartNum" => "0039-21",
                    "Date" => 1208318061,
                    "FileType" => "SREC",
                    "RelStatus" => 8,
                    "Tag" => "v1.2.3",
                    "Target" => "mega16",
                    "Active" => "1",
                    "Target" => "mega16",
                    "md5" => null,
                ),
                true,
            ),
            array(
                array(
                    "FWPartNum" => "0039-01-01-C",
                    "HWPartNum" => "0039-86",
                    "Status" => 8,
                    "Target" => "mega16",
                ),
                null,
                false,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $data    The data array to exepct
    * @param bool  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataGetLatest
    */
    public function testGetLatest($preload, $data, $expect)
    {
        $this->table->preloadMock($preload["toArray"]);
        foreach (array("checkHash", "selectInto") as $key) {
            if (isset($preload[$key])) {
                $this->table->method($key)->will($this->returnValue($preload[$key]));
            }
        }
        $ret = $this->o->getLatest();
        $this->assertSame($expect, $ret, "Return value was not correct");
        if ($ret) {
            $this->assertEquals($data, $this->table->toArray());
        }
    }
    /**
    * data provider for testGetLatest
    *
    * @return array
    */
    public static function dataCompareVersion()
    {
        return array(
            array(array(), "1.2.3", "1.2.3", 0),
            array(array(), "1.2.4", "1.2.3", 1),
            array(array(), "1.3.3", "1.2.3", 1),
            array(array(), "2.2.3", "1.2.3", 1),
            array(array(), "1.2.3", "1.2.4", -1),
            array(array(), "1.2.3", "1.3.3", -1),
            array(array(), "1.2.3", "2.2.3", -1),
            array(array(array("Version" => "1.3.3")), "1.2.3", null, -1),
            array(array(array("Version" => "1.2.3")), "1.2.4", "", 1),
            array(array(array("Version" => "1.2.3")), "01.02.03", "", 0),
            array(array(), "01.02.03", "", 1),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $data    The data array to exepct
    * @param bool  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataCompareVersion
    */
    public function testCompareVersion($preload, $ver1, $ver2, $expect)
    {
        $this->table->preloadMock($preload);
        $ret = $this->o->compareVersion($ver1, $ver2);
        $this->assertSame($expect, $ret, "Return value was not correct");
    }


}
?>
