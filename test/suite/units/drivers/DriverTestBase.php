<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2012 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
/** This is the HUGnet namespace */
namespace HUGnet\units\drivers;
/** This is the base class */
require_once CODE_BASE."/units/Driver.php";
/** This is a required class */
require_once CODE_BASE.'system/System.php';
/** This is a required class */
require_once TEST_CONFIG_BASE.'stubs/DummyTable.php';
/** This is a required class */
require_once CODE_BASE.'util/VPrint.php';

/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteBase
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2012 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.9.7
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
abstract class DriverTestBase extends \PHPUnit_Framework_TestCase
{
    /** This is the class we are testing */
    protected $class = "";
    /** This is the object we are testing */
    protected $o = null;

    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
        unset($this->o);
    }

    /**
    * test the set routine when an extra class exists
    *
    * @return null
    */
    public function testFactory()
    {
        $this->assertSame(
            "HUGnet\units\drivers\\".$this->class, get_class($this->o)
        );
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    abstract public static function dataGetValid();

    /**
    * test the set routine when an extra class exists
    *
    * @param string $class  The class to use
    * @param string $expect The expected data
    *
    * @return null
    *
    * @dataProvider dataGetValid
    */
    public function testGetValid($class, $expect)
    {
        $this->assertEquals($expect, $this->o->getValid());
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    abstract public static function dataValid();

    /**
    * test the set routine when an extra class exists
    *
    * @param string $class  The class to use
    * @param string $units  The units to check
    * @param string $expect The expected data
    *
    * @return null
    *
    * @dataProvider dataValid
    */
    public function testValid($units, $expect)
    {
        $this->assertSame($expect, $this->o->valid($units));
    }
    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    abstract public static function dataNumeric();
    /**
    * test the set routine when an extra class exists
    *
    * @param string $units  The units to check
    * @param string $expect The expected data
    *
    * @return null
    *
    * @dataProvider dataNumeric
    */
    public function testNumeric($units, $expect)
    {
        $this->assertSame($expect, $this->o->numeric($units));
    }

    /**
    * data provider for testGetTypes
    *
    * @return array
    */
    abstract public static function dataConvert();
    /**
    * test the set routine when an extra class exists
    *
    * @param string $class  The class to use
    * @param string $units  The units to check
    * @param string $expect The expected data
    *
    * @return null
    *
    * @dataProvider dataConvert
    */
    public function testConvert($data, $to, $from, $return, $expect)
    {
        $this->assertSame(
            $return, $this->o->convert($data, $to, $from), "Return is wrong"
        );
        $this->assertSame($expect, $data, "Result is wrong");
    }

}
?>
