<?php
/**
 * Tests the filter class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2011 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteContainers
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */

/** This is a required class */
require_once CODE_BASE.'containers/DeviceContainer.php';
/** This is a required class */
require_once CODE_BASE.'containers/PacketContainer.php';

/**
 * Test class for filter.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 08:44:56.
 *
 * @category   Libraries
 * @package    HUGnetLibTest
 * @subpackage SuiteContainers
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2011 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    Release: 0.9.7
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class DeviceContainerTest extends PHPUnit_Framework_TestCase
{

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
        $config = array(
            "plugins" => array(
                "dir" => realpath(TEST_CONFIG_BASE."files/plugins/"),
            ),
        );
        $this->config = &ConfigContainer::singleton();
        $this->config->forceConfig($config);
        $this->o = new DeviceContainer(
            array(
                "DeviceID"  => "000019",
                "HWPartNum" => "0039-CD-01-A",
                "FWPartNum" => "0123-45-67-C",
                "FWVersion" => "0.0.5",
            )
        );
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
        $this->o = null;
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataConstructor()
    {
        return array(
            // #0
            array(
                "00000000E80039CF01410039246743000302FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #1
            array(
                "00000000E80039CF01410039246743000102FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #2
            array(
                "00000000E80039CE01410039246743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #3
            array(
                "00000000E80039CD01410039456743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0039-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410039456743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #4
            array(
                "00000000E80039CC01410039256743000005FFFFFF",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 0,
                        ),
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #5
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo"    => "",
                    ),
                    "params" => array(
                    ),
                    "sensors"            => array(),
               ),
            ),
            // #6
            array(
                array(),
                array(
                    "group"             => "default",
                    "id"                => 0,
                    "DeviceID"          => "000000",
                    "DeviceName"        => "",
                    "HWPartNum"         => "",
                    "FWPartNum"         => "",
                    "FWVersion"         => "",
                    "RawSetup"     => "000000000000000000000000000000000000FFFFFF00",
                    "Active"            => 1,
                    "GatewayKey"        => 0,
                    "ControllerKey"     => 0,
                    "ControllerIndex"   => 0,
                    "DeviceLocation"    => "",
                    "DeviceJob"         => "",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 0,
                    "ActiveSensors"     => 0,
                    "DeviceGroup"       => "FFFFFF",
                    "DriverInfo"        => array(
                        "PacketTimeout" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params"            => array(
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #7
            array(
                array(
                    "group"             => "default",
                    "DriverInfo"        => array(),
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "asdf",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "e00392100",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                ),
                array(
                    "group"             => "default",
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "asdf",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "DriverInfo"        => array(
                        "RawDriverInfo" => "",
                    ),
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                    "sensors"            => array(),
                ),
            ),
            // #8
            array(
                "",
                array(
                    "group"             => "default",
                    "id"                => 0,
                    "DeviceID"          => "000000",
                    "DeviceName"        => "",
                    "HWPartNum"         => "",
                    "FWPartNum"         => "",
                    "FWVersion"         => "",
                    "RawSetup"     => "",
                    "Active"            => 1,
                    "GatewayKey"        => 0,
                    "ControllerKey"     => 0,
                    "ControllerIndex"   => 0,
                    "DeviceLocation"    => "",
                    "DeviceJob"         => "",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 0,
                    "ActiveSensors"     => 0,
                    "DeviceGroup"       => "FFFFFF",
                    "DriverInfo"        => array(
                        "PacketTimeout" => 0,
                    ),
                    "params"            => array(
                    ),
                    "sensors"            => array(),
                ),
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataConstructor
    */
    public function testConstructor($preload, $expect)
    {
        $obj = new DeviceContainer($preload);
        $this->assertInternalType("object", $obj->params);
        $this->assertSame(
            $expect["params"],
            $obj->params->toArray(false),
            "Params are wrong"
        );
        unset($expect["params"]);
        $this->assertInternalType("object", $obj->sensors);
        $this->assertSame(
            $expect["sensors"],
            $obj->sensors->toArray(false),
            "Sensors are wrong"
        );
        unset($expect["sensors"]);
        //$this->assertSame($expect, $data);
        foreach ($expect as $key => $value) {
            $this->assertSame($value, $obj->$key, "Bad Value in key $key");
        }
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataFromArray()
    {
        return array(
            array( // #0
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                ),
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF1E",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array( // #1
                array(),
                array(
                    "group"             => "default",
                    "id"                => 0,
                    "DeviceID"          => "000000",
                    "DeviceName"        => "",
                    "HWPartNum"         => "",
                    "FWPartNum"         => "",
                    "FWVersion"         => "",
                    "RawSetup"     => "000000000000000000000000000000000000FFFFFF00",
                    "Active"            => 1,
                    "GatewayKey"        => 0,
                    "ControllerKey"     => 0,
                    "ControllerIndex"   => 0,
                    "DeviceLocation"    => "",
                    "DeviceJob"         => "",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 0,
                    "ActiveSensors"     => 0,
                    "DeviceGroup"       => "FFFFFF",
                    "DriverInfo"        => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params"            => array(
                    ),
                    "sensors"           => array(),
                ),
            ),
            array( // #2
                array(
                    "group"             => "default",
                    "DriverInfo"        => array(
                    ),
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"          => "",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "e00392100",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                ),
                array(
                    "group"             => "default",
                    "id"                => 1234,
                    "DeviceID"          => "004738",
                    "DeviceName"        => "Name",
                    "HWPartNum"         => "0039-21-02-A",
                    "FWPartNum"         => "0039-22-95-C",
                    "FWVersion"         => "2.1.3",
                    "RawSetup"    => "00000004D20039210241003922954302010312345614",
                    "Active"            => 1,
                    "GatewayKey"        => 234,
                    "ControllerKey"     => 28,
                    "ControllerIndex"   => 1,
                    "DeviceLocation"    => "Location",
                    "DeviceJob"         => "Job",
                    "Driver"            => "eDEFAULT",
                    "PollInterval"      => 52,
                    "ActiveSensors"     => 3,
                    "DeviceGroup"       => "123456",
                    "DriverInfo"        => array(
                        "RawDriverInfo" => "",
                    ),
                    "params"            => array(
                        "DriverInfo" => array(
                            "BoredomThreshold"  => 20,
                        ),
                    ),
                    "sensors"            => array(),
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataFromArray
    */
    public function testFromArray($preload, $expect)
    {
        $this->o->clearData();
        $this->o->fromArray($preload);
        $this->assertInternalType("object", $this->o->params);
        $this->assertSame(
            $expect["params"],
            $this->o->params->toArray(false),
            "Params are wrong"
        );
        unset($expect["params"]);
        $this->assertInternalType("object", $this->o->sensors);
        $this->assertSame(
            $expect["sensors"],
            $this->o->sensors->toArray(false),
            "Sensors are wrong"
        );
        unset($expect["sensors"]);
        //$this->assertSame($expect, $data);
        foreach ($expect as $key => $value) {
            $this->assertSame($value, $this->o->$key, "Bad Value in key $key");
        }
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataFromSetupString()
    {
        return array(
            array( // #0
                array(),
                "00000000E80039CF01410039246743000302FFFFFF50",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array( // #1
                array(),
                "00000000E80039CF01410039246743000102FFFFFF50",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array( // #2
                array(),
                "00000000E80039CE01410039246743000005FFFFFF1E",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF1E",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 30,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array( // #3
                array(),
                "00000000E80039CD01410039456743000005FFFFFF530123456789",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0039-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410039456743000005FFFFFF53".
                        "0123456789",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "0123456789",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 83,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(  // #4
                array(),
                "00000000E80039CC01410039256743000005FFFFFF2101",
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF2101",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "DriverInfo" => array(
                        "PacketTimeout" => 0,
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                        "RawDriverInfo" => "01",
                    ),
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 33,
                        ),
                    ),
                    "sensors"            => array(),
               ),
            ),
            array(  // #5 Device already loaded
                array(
                    "id" => 0xE7,
                    "DeviceID" => "0000E7",
                ),
                "00000000E80039CC01410039256743000005FFFFFF2101",
                array(
                    "group"    => "default",
                    "id"       => 0xE7,
                    "DeviceID" => "0000E7",
                    "params"   => array(),
                    "sensors"  => array(),
               ),
            ),
            array(  // #6 Bad HWPartNum
                array(
                ),
                "00000000E80038CC01410039256743000005FFFFFF2101",
                array(
                    "group"    => "default",
                    "id"       => 0,
                    "DeviceID" => "000000",
                    "params"   => array(),
                    "sensors"  => array(),
               ),
            ),
            array(  // #7 Bad FWPartNum
                array(
                ),
                "00000000E80039CC01410038256743000005FFFFFF2101",
                array(
                    "group"    => "default",
                    "id"       => 0,
                    "DeviceID" => "000000",
                    "params"   => array(),
                    "sensors"  => array(),
               ),
            ),
            array(  // #8 Specific example
                array(
                ),
                "00000000016E00392801410039201843000002FFFFFF50010202020202020202"
                    ."7046707070707008200820082008204F034F034F034F03",
                array(
                    "group"    => "default",
                    "id"       => 0,
                    "DeviceID" => "000000",
                    "params"   => array(),
                    "sensors"  => array(),
               ),
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array  $preload The value to preload
    * @param string $string  The setup string to test
    * @param array  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataFromSetupString
    */
    public function testFromSetupString($preload, $string, $expect)
    {
        $this->o->clearData();
        $this->o->fromAny($preload);
        $this->o->fromSetupString($string);
        $this->assertInternalType("object", $this->o->params);
        $this->assertSame(
            $expect["params"],
            $this->o->params->toArray(false),
            "Params are wrong"
        );
        unset($expect["params"]);
        $this->assertInternalType("object", $this->o->sensors);
        $this->assertSame(
            $expect["sensors"],
            $this->o->sensors->toArray(false),
            "Sensors are wrong"
        );
        unset($expect["sensors"]);
        //$this->assertSame($expect, $data);
        foreach ($expect as $key => $value) {
            $this->assertSame($value, $this->o->$key, "Bad Value in key $key");
        }
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataToSetupString()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.3.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000302FFFFFF50",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                ),
                "00000000E80039CF01410039246743000302FFFFFF50",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF21"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 80,
                        ),
                    ),
                ),
                "00000000E80039CF01410039246743000102FFFFFF5001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CE-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CE01410039246743000005FFFFFF31"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 32,
                        ),
                    ),
                ),
                "00000000E80039CE01410039246743000005FFFFFF2001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF53"
                        ."01234567",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "testDriver",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 48,
                        ),
                    ),
                ),
                "00000000E80039CD01410123456743000005FFFFFF3001234567",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CC-01-A",
                    "FWPartNum" => "0039-25-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CC01410039256743000005FFFFFF23",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "CurrentGatewayKey" => 0,
                    "params" => array(
                        "DriverInfo" => array(
                            "BoredomThreshold" => 64,
                        ),
                    ),
                ),
                "00000000E80039CC01410039256743000005FFFFFF40",
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The value to preload
    * @param array $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataToSetupString
    */
    public function testToSetupString($preload, $expect)
    {
        $this->o->fromArray($preload);
        $this->assertSame($expect, (string)$this->o);
    }


    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataHexifyVersion()
    {
        return array(
            array("1.2.3", "010203"),
            array("11.12.13", "111213"),
        );
    }

    /**
    * test
    *
    * @param string $version The version to play with
    * @param string $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHexifyVersion
    */
    public function testHexifyVersion($version, $expect)
    {
        $value = DeviceContainer::hexifyVersion($version);
        $this->assertSame($expect, $value);
    }

    /**
    * data provider for testGetBytes
    *
    * @return array
    */
    public static function dataHexifyPartNum()
    {
        return array(
            array("0039-20-06-C", "0039200643"),
            array("0039-26-01-P", "0039260150"),
        );
    }

    /**
    * test
    *
    * @param string $partNum The partNum to play with
    * @param string $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHexifyPartNum
    */
    public function testHexifyPartNum($partNum, $expect)
    {
        $value = DeviceContainer::hexifyPartNum($partNum);
        $this->assertSame($expect, $value);
    }
    /**
    * data provider for testSet
    *
    * @return array
    */
    public static function dataSet()
    {
        return array(
            array("FWVersion", "5.3.1", "5.3.1"),
            array("FWVersion", "2.4.1+git", "2.4.1"),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $var    The variable to set
    * @param mixed  $value  The value to set
    * @param mixed  $expect The expected return
    *
    * @return null
    *
    * @dataProvider dataSet
    */
    public function testSet($var, $value, $expect)
    {
        $this->o->$var = $value;
        $data = $this->readAttribute($this->o, "data");
        $this->assertSame($expect, $data[$var]);
    }
    /**
    * data provider for testSet
    *
    * @return array
    */
    public static function dataCall()
    {
        $pkt = new PacketContainer();
        return array(
            array("testCall", "5.3.1", "5.3.1", "5.3.1"),
            array("testCall", "2.4.1+git", "2.4.1+git", "2.4.1+git"),
            array("bugusFunction", "here", null, false),
            array(
                "testCall",
                &$pkt,
                &$pkt,
                &$pkt,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $name   The function to call
    * @param mixed  $value  The value to set
    * @param mixed  $expect The expected data set
    * @param mixed  $return The expected return
    *
    * @return null
    *
    * @dataProvider dataCall
    */
    public function testCall($name, $value, $expect, $return)
    {
        $ret = $this->o->$name($value);
        $this->assertSame($return, $ret);
        $this->assertSame($expect, $GLOBALS[$name]);
    }


    /**
    * data provider for testIsEmpty
    *
    * @return array
    */
    public static function dataPacketConsumer()
    {
        return array(
            array(  // testDriver
                array(
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CD-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039CD01410123456743000005FFFFFF53"
                        ."01234567",
                ),
                array(),
                true,
            ),
            array(  // Defautl driver
                array(
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-AA-01-A",
                    "FWPartNum" => "0123-45-67-C",
                    "FWVersion" => "0.0.5",
                    "RawSetup"  => "00000000E80039AA01410123456743000005FFFFFF53"
                        ."01234567",
                ),
                array(),
                false,
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The values to preload
    * @param array $pkt     The packet values to preload
    * @param mixed $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataPacketConsumer
    */
    public function testPacketConsumer($preload, $pkt, $expect)
    {
        unset($GLOBALS["packetConsumer"]);
        $this->o->fromAny($preload);
        $p = new PacketContainer($pkt);
        $this->o->packetConsumer($p);
        if ($expect) {
            $this->assertSame($p, $GLOBALS["packetConsumer"]);
        } else {
            $this->assertNull($GLOBALS["packetConsumer"]);
        }
    }
    /**
    * data provider for testHistoryTable
    *
    * @return array
    */
    public static function dataHistoryTable()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                "Test2HistoryTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-99-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                "Test1HistoryTable",
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The values to preload
    * @param mixed  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHistoryTable
    */
    public function testHistoryTable($preload, $expect)
    {
        $this->o->fromAny($preload);
        $this->assertSame($expect, $this->o->historyTable());
    }
    /**
    * data provider for testHistoryFactory
    *
    * @return array
    */
    public static function dataHistoryFactory()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 51,
                    "Date" => 1234567890,
                    "deltaT" => 12,
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                true,
                array(
                    "group" => "default",
                    "raw" => array(),
                    "converted" => false,
                    "id" => 51,
                    "Date" => 1234567890,
                    "deltaT" => 12,
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                "Test2HistoryTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-99-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 51,
                    "Date" => 1234567890,
                    "deltaT" => 12,
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                true,
                array(
                    "group" => "default",
                    "raw" => array(),
                    "converted" => false,
                    "id" => 51,
                    "Date" => 1234567890,
                    "deltaT" => 12,
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                ),
                "Test1HistoryTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-99-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    'DataIndex' => 99,
                    'timeConstant' => 1,
                    'deltaT' => 593,
                    0 => array(
                        'value' => 10.749,
                        'units' => 'V',
                        'unitType' => 'Voltage',
                        'dataType' => 'raw',
                    ),
                    1 => array(
                        'value' => 11.7,
                        'units' => 'mA',
                        'unitType' => 'Current',
                        'dataType' => 'raw',
                    ),
                    2 => array(
                        'value' => 33.3514,
                        'units' => '&#176;C',
                        'unitType' => 'Temperature',
                        'dataType' => 'raw',
                    ),
                    3 => array(
                        'value' => 10.951,
                        'units' => 'V',
                        'unitType' => 'Voltage',
                        'dataType' => 'raw',
                    ),
                    4 => array(
                        'value' => 20.3,
                        'units' => 'mA',
                        'unitType' => 'Current',
                        'dataType' => 'raw',
                    ),
                    5 => array(
                        'value' => 35.2126,
                        'units' => '&#176;C',
                        'unitType' => 'Temperature',
                        'dataType' => 'raw',
                    ),
                    'id' => 385,
                    'Date' => 1281389816,
                ),
                true,
                array(
                    "group" => "default",
                    "raw" => array(
                        null,null,null,null,null
                    ),
                    "converted" => false,
                    "id" => 385,
                    "Date" => 1281389816,
                    "deltaT" => 593,
                    "Data0" => 10.749,
                    "Data1" => 11.7,
                    "Data2" => 33.3514,
                    "Data3" => 10.951,
                    "Data4" => 20.3,
                ),
                "Test1HistoryTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 51,
                    "Date" => 1234567890,
                    "Type" => "DAILY",
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                false,
                array(
                    "group" => "default",
                    "raw" => array(),
                    "id" => 51,
                    "Date" => 1234567890,
                    "Type" => "DAILY",
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                "Test2AverageTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-99-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    "group" => "default",
                    "id" => 51,
                    "Date" => 1234567890,
                    "deltaT" => 12,
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                    "Data5" => 6.0,
                    "Data6" => 7.0,
                ),
                false,
                array(
                    "group" => "default",
                    "raw" => array(),
                    "id" => 51,
                    "Date" => 1234567890,
                    "Type" => "15MIN",
                    "Data0" => 1.0,
                    "Data1" => 2.0,
                    "Data2" => 3.0,
                    "Data3" => 4.0,
                    "Data4" => 5.0,
                ),
                "Test1AverageTable",
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-99-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 0,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                ),
                array(
                    'DataIndex' => 99,
                    'timeConstant' => 1,
                    'deltaT' => 593,
                    0 => array(
                        'value' => 10.749,
                        'units' => 'V',
                        'unitType' => 'Voltage',
                        'dataType' => 'raw',
                    ),
                    1 => array(
                        'value' => 11.7,
                        'units' => 'mA',
                        'unitType' => 'Current',
                        'dataType' => 'raw',
                    ),
                    2 => array(
                        'value' => 33.3514,
                        'units' => '&#176;C',
                        'unitType' => 'Temperature',
                        'dataType' => 'raw',
                    ),
                    3 => array(
                        'value' => 10.951,
                        'units' => 'V',
                        'unitType' => 'Voltage',
                        'dataType' => 'raw',
                    ),
                    4 => array(
                        'value' => 20.3,
                        'units' => 'mA',
                        'unitType' => 'Current',
                        'dataType' => 'raw',
                    ),
                    5 => array(
                        'value' => 35.2126,
                        'units' => '&#176;C',
                        'unitType' => 'Temperature',
                        'dataType' => 'raw',
                    ),
                    'id' => 385,
                    'Date' => 1281389816,
                ),
                false,
                array(
                    "group" => "default",
                    "raw" => array(
                        null,null,null,null,null
                    ),
                    "id" => 385,
                    "Date" => 1281389816,
                    "Type" => "15MIN",
                    "Data0" => 10.749,
                    "Data1" => 11.7,
                    "Data2" => 33.3514,
                    "Data3" => 10.951,
                    "Data4" => 20.3,
                ),
                "Test1AverageTable",
            ),

        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The values to preload
    * @param array  $data    The data to load into the history object
    * @param bool   $history History if true, average if false
    * @param mixed  $expect  The expected return
    * @param string $return  The expected class returned
    *
    * @return null
    *
    * @dataProvider dataHistoryFactory
    */
    public function testHistoryFactory(
        $preload, $data, $history, $expect, $return
    ) {
        $this->o->fromAny($preload);

        $hist = $this->o->historyFactory($data, $history);
        $this->assertSame($return, get_class($hist), "Class wrong");
        $this->assertSame($expect, $hist->toArray(), "Data wrong");
        $this->assertSame($this->o, $hist->device, "Device wrong");
    }


    /**
    * data provider for testHistoryHeader
    *
    * @return array
    */
    public static function dataHistoryHeader()
    {
        return array(
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 2,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                    "sensors" => array(
                        "Sensors" => 2,
                    ),
                ),
                array(
                    "Date" => "Date",
                    "Data0" => "Sensor 1 (firstUnit)",
                    "Data1" => "Sensor 2 (firstUnit)",
                ),
            ),
            array(
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 0,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 2,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                    "sensors" => array(
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 1,
                        "Sensors" => 3,
                        0 => array(
                            "dataType" => UnitsBase::TYPE_IGNORE,
                        ),
                        1 => array(
                            "location" => "Hello",
                        ),
                        2 => array(
                            "location" => "Hello2",
                        ),
                    ),
                ),
                array(
                    "Date" => "Date",
                    "Data1" => "Hello (firstUnit)",
                    "Data2" => "Hello2 (anotherUnit2)",
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The values to preload
    * @param mixed  $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataHistoryHeader
    */
    public function testHistoryHeader($preload, $expect)
    {
        $this->o->clearData();
        $this->o->fromAny($preload);
        $this->assertSame($expect, $this->o->historyHeader());
    }

    /**
    * data provider for testGetController
    *
    * @return array
    */
    public static function dataGetController()
    {
        return array(
            array( // #0
                array(
                    array(
                        "group" => "default",
                        "DriverInfo" => array(),
                        "id" => 232,
                        "DeviceID" => "0000E8",
                        "DeviceName" => "",
                        "HWPartNum" => "0039-CF-01-A",
                        "FWPartNum" => "0039-24-67-C",
                        "FWVersion" => "0.1.2",
                        "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                        "Active" => 1,
                        "GatewayKey" => 0,
                        "ControllerKey" => 0,
                        "ControllerIndex" => 0,
                        "DeviceLocation" => "",
                        "DeviceJob" => "",
                        "Driver" => "eDEFAULT",
                        "PollInterval" => 0,
                        "ActiveSensors" => 2,
                        "DeviceGroup" => "FFFFFF",
                        "params" => "",
                        "sensors" => array(
                            "Sensors" => 2,
                        ),
                    ),
                ),
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 233,
                    "DeviceID" => "0000E9",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 232,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 2,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                    "sensors" => array(
                        "Sensors" => 2,
                    ),
                ),
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => "2",
                    "sensors" => array(
                        "Sensors" => 2,
                        "ActiveSensors" => 2,
                        "PhysicalSensors" => 2,
                        0 => array("id" => 0, "type" => ""),
                        1 => array("id" => 0, "type" => ""),
                    ),
                    "params" => array(),
                ),
            ),
            array(  // #1 This is a cache hit. (Requires the previous test)
                array(
                ),
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 233,
                    "DeviceID" => "0000E9",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 232,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 2,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                    "sensors" => array(
                        "Sensors" => 2,
                    ),
                ),
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => "2",
                    "sensors" => array(
                        "Sensors" => 2,
                        "ActiveSensors" => 2,
                        "PhysicalSensors" => 2,
                        0 => array("id" => 0, "type" => ""),
                        1 => array("id" => 0, "type" => ""),
                    ),
                    "params" => array(),
                ),
            ),
            array(  // #2 Not found.
                array(
                ),
                array(
                    "group" => "default",
                    "DriverInfo" => array(),
                    "id" => 233,
                    "DeviceID" => "0000E9",
                    "DeviceName" => "",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => 1,
                    "GatewayKey" => 0,
                    "ControllerKey" => 238,
                    "ControllerIndex" => 0,
                    "DeviceLocation" => "",
                    "DeviceJob" => "",
                    "Driver" => "eDEFAULT",
                    "PollInterval" => 0,
                    "ActiveSensors" => 2,
                    "DeviceGroup" => "FFFFFF",
                    "params" => "",
                    "sensors" => array(
                        "Sensors" => 2,
                    ),
                ),
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                    ),
                    "id" => 0,
                    "RawSetup"  => "000000000000000000000000000000000000FFFFFF00",
                    "sensors" => array(
                    ),
                    "params" => array(),
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $load    The stuff to load into the database.
    * @param array $preload The values to preload
    * @param mixed $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataGetController
    */
    public function testGetController($load, $preload, $expect)
    {
        foreach ($load as $l) {
            $this->o->clearData();
            $this->o->fromAny($l);
            $this->o->insertRow(true);
        }
        $this->o->clearData();
        $this->o->fromAny($preload);
        $this->assertSame($expect, $this->o->getController()->toArray(false));
    }
    /**
    * data provider for testGetController
    *
    * @return array
    */
    public static function dataDriver()
    {
        return array(
            array( // #0
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 2,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => "2",
                    "sensors" => array(
                        "Sensors" => 2,
                        "ActiveSensors" => 2,
                        "PhysicalSensors" => 2,
                        0 => array("id" => 0, "type" => ""),
                        1 => array("id" => 0, "type" => ""),
                    ),
                    "params" => array(),
                ),
                "TestDriverPlugin",
            ),
        );
    }
    /**
    * test the set routine when an extra class exists
    *
    * @param array $preload The values to preload
    * @param mixed $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataDriver
    */
    public function testDriver($preload, $expect)
    {
        $this->o->clearData();
        $this->o->fromAny($preload);
        $this->assertSame($expect, get_class($this->o->driver()));
    }
    /**
    * data provider for testSensor
    *
    * @return array
    */
    public static function dataSensor()
    {
        return array(
            array(
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 3,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => 3,
                    "sensors" => array(
                        "Sensors" => 3,
                        "ActiveSensors" => 3,
                        "PhysicalSensors" => 3,
                        0 => array("id" => 3, "type" => "Hello"),
                        1 => array("id" => 2),
                        2 => array("id" => 8),
                    ),
                    "params" => array(),
                ),
                0,
                "Test2Sensor",
            ),
            array(
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 3,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => 3,
                    "sensors" => array(
                        "Sensors" => 3,
                        "ActiveSensors" => 3,
                        "PhysicalSensors" => 3,
                        0 => array("id" => 3),
                        1 => array("id" => 2),
                        2 => array("id" => 8),
                    ),
                    "params" => array(),
                ),
                0,
                "Test1Sensor",
            ),
            array(
                array(
                    "DriverInfo" => array(
                        "RawDriverInfo" => "",
                        "PhysicalSensors" => 3,
                        "VirtualSensors" => 0,
                    ),
                    "id" => 232,
                    "DeviceID" => "0000E8",
                    "HWPartNum" => "0039-CF-01-A",
                    "FWPartNum" => "0039-24-67-C",
                    "FWVersion" => "0.1.2",
                    "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                    "Active" => "1",
                    "GatewayKey" => "0",
                    "ControllerKey" => "0",
                    "ControllerIndex" => "0",
                    "Driver" => "testDriver",
                    "PollInterval" => "0",
                    "ActiveSensors" => 3,
                    "sensors" => array(
                        "Sensors" => 3,
                        "ActiveSensors" => 3,
                        "PhysicalSensors" => 3,
                        0 => array("id" => 3),
                        1 => array("id" => 2),
                        2 => array("id" => 8),
                    ),
                    "params" => array(),
                ),
                8,
                "Test1Sensor",
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param mixed  $preload The stuff to give to the constructor
    * @param string $num     The string to use for the input
    * @param array  $expect  The expected data
    *
    * @return null
    *
    * @dataProvider dataSensor
    */
    public function testSensor($preload, $num, $expect)
    {
        $this->o->clearData();
        $this->o->fromArray($preload);
        $this->assertSame($expect, get_class($this->o->sensor($num)));
    }
    /**
    * data provider for testGetController
    *
    * @return array
    */
    public static function dataGetSensor()
    {
        return array(
            array( // #0
                array(
                    array(
                        "group" => "default",
                        "DriverInfo" => array(),
                        "id" => 232,
                        "DeviceID" => "0000E8",
                        "DeviceName" => "",
                        "HWPartNum" => "0039-CF-01-A",
                        "FWPartNum" => "0039-24-67-C",
                        "FWVersion" => "0.1.2",
                        "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                        "Active" => 1,
                        "GatewayKey" => 0,
                        "ControllerKey" => 0,
                        "ControllerIndex" => 0,
                        "DeviceLocation" => "",
                        "DeviceJob" => "",
                        "Driver" => "eDEFAULT",
                        "PollInterval" => 0,
                        "ActiveSensors" => 2,
                        "DeviceGroup" => "FFFFFF",
                        "params" => "",
                        "sensors" => array(
                            "Sensors" => 3,
                            0 => array("id" => 0x03, "type" => "hello"),
                            1 => array("id" => 0x02, "type" => "there"),
                            2 => array("id" => 0x01, "type" => "here"),
                        ),
                    ),
                ),
                0xE8,
                0,
                array("id" => 0x03, "type" => "hello"),
            ),
            array( // #1
                array(
                    array(
                        "group" => "default",
                        "DriverInfo" => array(),
                        "id" => 232,
                        "DeviceID" => "0000E8",
                        "DeviceName" => "",
                        "HWPartNum" => "0039-CF-01-A",
                        "FWPartNum" => "0039-24-67-C",
                        "FWVersion" => "0.1.2",
                        "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                        "Active" => 1,
                        "GatewayKey" => 0,
                        "ControllerKey" => 0,
                        "ControllerIndex" => 0,
                        "DeviceLocation" => "",
                        "DeviceJob" => "",
                        "Driver" => "eDEFAULT",
                        "PollInterval" => 0,
                        "ActiveSensors" => 2,
                        "DeviceGroup" => "FFFFFF",
                        "params" => "",
                        "sensors" => array(
                            "Sensors" => 3,
                            0 => array("id" => 0x03, "type" => "hello"),
                            1 => array("id" => 0x02, "type" => "there"),
                            2 => array("id" => 0x01, "type" => "here"),
                        ),
                    ),
                ),
                0xE8,
                1,
                array("id" => 0x02, "type" => "there"),
            ),
            array( // #2 Sensor not present
                array(
                    array(
                        "group" => "default",
                        "DriverInfo" => array(),
                        "id" => 232,
                        "DeviceID" => "0000E8",
                        "DeviceName" => "",
                        "HWPartNum" => "0039-CF-01-A",
                        "FWPartNum" => "0039-24-67-C",
                        "FWVersion" => "0.1.2",
                        "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                        "Active" => 1,
                        "GatewayKey" => 0,
                        "ControllerKey" => 0,
                        "ControllerIndex" => 0,
                        "DeviceLocation" => "",
                        "DeviceJob" => "",
                        "Driver" => "eDEFAULT",
                        "PollInterval" => 0,
                        "ActiveSensors" => 2,
                        "DeviceGroup" => "FFFFFF",
                        "params" => "",
                        "sensors" => array(
                            "Sensors" => 2,
                            0 => array("id" => 0x03, "type" => "hello"),
                            1 => array("id" => 0x02, "type" => "there"),
                            2 => array("id" => 0x01, "type" => "here"),
                        ),
                    ),
                ),
                0xE8,
                4,
                array("id" => null, "type" => ""),
            ),
            array( // #3 Device not present
                array(
                    array(
                        "group" => "default",
                        "DriverInfo" => array(),
                        "id" => 232,
                        "DeviceID" => "0000E8",
                        "DeviceName" => "",
                        "HWPartNum" => "0039-CF-01-A",
                        "FWPartNum" => "0039-24-67-C",
                        "FWVersion" => "0.1.2",
                        "RawSetup"  => "00000000E80039CF01410039246743000102FFFFFF",
                        "Active" => 1,
                        "GatewayKey" => 0,
                        "ControllerKey" => 0,
                        "ControllerIndex" => 0,
                        "DeviceLocation" => "",
                        "DeviceJob" => "",
                        "Driver" => "eDEFAULT",
                        "PollInterval" => 0,
                        "ActiveSensors" => 2,
                        "DeviceGroup" => "FFFFFF",
                        "params" => "",
                        "sensors" => array(
                            "Sensors" => 2,
                            0 => array("id" => 0x03, "type" => "hello"),
                            1 => array("id" => 0x02, "type" => "there"),
                            2 => array("id" => 0x01, "type" => "here"),
                        ),
                    ),
                ),
                0xE9,
                0,
                array("id" => null, "type" => ""),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param array $load   The stuff to load into the database.
    * @param array $id     The values to preload
    * @param int   $sensor The sensor to get
    * @param mixed $expect The expected return
    *
    * @return null
    *
    * @dataProvider dataGetSensor
    */
    public function testGetSensor($load, $id, $sensor, $expect)
    {
        foreach ($load as $l) {
            $this->o->clearData();
            $this->o->fromAny($l);
            $this->o->insertRow(true);
        }
        $this->assertSame(
            $expect,
            $this->o->getSensor($id, $sensor)->toArray(false)
        );
    }
    /**
    * data provider for testGetHardwareTypes
    *
    * @return array
    */
    public static function dataGetHardwareTypes()
    {
        return array(
            array(
                array(
                ),
                1,
                array('HWPartNum', 'Parameters', 'Obsolete', 'Notes'),
                array(
                    "CPU", "VCC"
                ),
            ),
            array(
                array(
                ),
                0,
                array('HWPartNum', 'Parameters', 'Obsolete', 'Notes'),
                array(
                    "CPU", "VCC", "Firmware", "FuseHigh", "FuseLow"
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param mixed  $preload    The stuff to give to the constructor
    * @param string $obsolete   The string to use for the input
    * @param array  $expect     The expected data
    * @param array  $parameters The parameters to test
    *
    * @return null
    *
    * @dataProvider dataGetHardwareTypes
    */
    public function testGetHardwareTypes($preload, $obsolete, $expect, $parameters)
    {
        $this->o->clearData();
        $this->o->fromArray($preload);
        $ret = $this->o->getHardwareTypes($obsolete);
        foreach ($ret as $val) {
            $this->assertEquals($obsolete, $val["Obsolete"], "Obsolete is wrong");
            foreach ($expect as $k) {
                $this->assertTrue(
                    isset($val[$k]), "'$k' is missing in ".$val["HWPartNum"]
                );
            }
            foreach ($parameters as $k) {
                $this->assertTrue(
                    isset($val["Param"][$k]),
                    "Param '$k' is missing in ".$val["HWPartNum"]
                );
            }
        }
    }

}

?>
