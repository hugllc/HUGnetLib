<?php
/**
 * Tests the filter class
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 *
 */


require_once dirname(__FILE__).'/../../base/OutputContainer.php';

/**
 * Test class for filter.
 * Generated by PHPUnit_Util_Skeleton on 2007-10-30 at 08:44:56.
 *
 * @category   Devices
 * @package    HUGnetLibTest
 * @subpackage Devices
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class OutputContainerTest extends PHPUnit_Framework_TestCase
{

    /**
    * Sets up the fixture, for example, open a network connection.
    * This method is called before a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function setUp()
    {
        $this->o = new OutputContainerTestClass();
    }

    /**
    * Tears down the fixture, for example, close a network connection.
    * This method is called after a test is executed.
    *
    * @return null
    *
    * @access protected
    */
    protected function tearDown()
    {
        $this->o = null;
    }



    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataGetOutputRow()
    {
        return array(
            array(
                array(),
                null,
                array(
                    "Attrib1" => "0",
                    "Attrib2" => "Default",
                    "Attrib3" => "Data",
                    "Attrib4" => "Array",
                ),
            ),
            array(
                array(),
                array(),
                array(
                    "Attrib1" => "0",
                    "Attrib2" => "Default",
                    "Attrib3" => "Data",
                    "Attrib4" => "Array",
                ),
            ),
            array(
                array(),
                array("Attrib4", "Attrib2", "Attrib3"),
                array(
                    "Attrib4" => "Array",
                    "Attrib2" => "Default",
                    "Attrib3" => "Data",
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The data to preload into the class
    * @param array  $cols    The columns to use
    * @param int    $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataGetOutputRow
    */
    public function testGetOutputRow($preload, $cols, $expect)
    {
        $this->o->clearData();
        $this->o->fromAny($preload);
        $ret = $this->o->getOutputRow($cols);
        $this->assertSame(
            $expect,
            $ret
        );
    }
    /**
    * data provider for testDeviceID
    *
    * @return array
    */
    public static function dataGetOutputHeader()
    {
        return array(
            array(
                array(),
                null,
                array(
                    "Attrib1" => "First Column",
                    "Attrib2" => "Next One",
                    "Attrib3" => "Attrib3",
                    "Attrib4" => "Skipped One",
                ),
            ),
            array(
                array(),
                array(),
                array(
                    "Attrib1" => "First Column",
                    "Attrib2" => "Next One",
                    "Attrib3" => "Attrib3",
                    "Attrib4" => "Skipped One",
                ),
            ),
            array(
                array(),
                array("Attrib4", "Attrib2", "Attrib3"),
                array(
                    "Attrib4" => "Skipped One",
                    "Attrib2" => "Next One",
                    "Attrib3" => "Attrib3",
                ),
            ),
        );
    }

    /**
    * test the set routine when an extra class exists
    *
    * @param string $preload The data to preload into the class
    * @param array  $cols    The columns to use
    * @param int    $expect  The expected return
    *
    * @return null
    *
    * @dataProvider dataGetOutputHeader
    */
    public function testGetOutputHeader($preload, $cols, $expect)
    {
        $this->o->clearData();
        $this->o->fromAny($preload);
        $ret = $this->o->getOutputHeader($cols);
        $this->assertSame(
            $expect,
            $ret
        );
    }

}
/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Test
 * @package    HUGnetLibTest
 * @subpackage Database
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class OutputContainerTestClass extends OutputContainer
{
    /** These are the endpoint information bits */
    /** @var array This is the default values for the data */
    protected $default = array(
        "Attrib1" => 0,
        "Attrib2" => "Default",
        "Attrib3" => "Data",
        "Attrib4" => array("Hello"),
    );
    /** These are the endpoint information bits */
    /** @var array This is the default values for the data */
    protected $labels = array(
        "Attrib1" => "First Column",
        "Attrib2" => "Next One",
        "Attrib4" => "Skipped One",
    );

    /**
    * This is the constructor
    *
    * @param mixed $data This is an array or string to create the object from
    */
    function __construct($data="")
    {
        parent::__construct($data);
    }

}
?>
