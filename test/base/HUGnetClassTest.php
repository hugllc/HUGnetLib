<?php
/**
 * This runs all of the tests associated with HUGnetLib.
 *
 * PHP Version 5
 *
 * <pre>
 * HUGnetLib is a library of HUGnet code
 * Copyright (C) 2007-2010 Hunt Utilities Group, LLC
 * Copyright (C) 2009 Scott Price
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * </pre>
 *
 * @category   Test
 * @package    HUGnetLibTest
 * @subpackage Database
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @version    SVN: $Id$
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */

if (!defined("HUGNET_INCLUDE_PATH")) {
    define("HUGNET_INCLUDE_PATH", realpath(dirname(__FILE__)."/../.."));
}

require_once dirname(__FILE__).'/../../base/HUGnetClass.php';

/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Test
 * @package    HUGnetLibTest
 * @subpackage Database
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class HUGnetClassTest extends PHPUnit_Framework_TestCase
{
    /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function setUp()
    {
        parent::setUp();
        //$this->o =& HUGnetDB::getInstance("HUGnetDBClassTest", $this->config);
        $this->o = new HUGnetClassTestStub($this->config);
    }

    /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    *
    * @access protected
    *
    * @return null
    */
    protected function tearDown()
    {
        unset($this->o);
    }

    /**
    * Data provider for testRemove
    *
    * @return array
    */
    public static function dataVerbose()
    {
        return array(
            array(0, 0),
            array(6, 6),
            array(15, 15),
            array(false, 0),
            array(true, 1),
        );
    }
    /**
    * test
    *
    * @param int $val    The database key to get the record from
    * @param int $expect The info to expect returned
    *
    * @return null
    *
    * @dataProvider dataVerbose
    */
    public function testVerbose($val, $expect)
    {
        $this->o->verbose($val);
        $this->assertAttributeSame($expect, "verbose", $this->o);
    }

    /**
    * data provider for testConstructor
    *
    * @return array
    *
    * @static
    */
    public static function dataVPrint()
    {
        return array(
            array("", 3, 10, ""),
            array("This is a test", 3, 10, "(HUGnetClassTestStub) This is a test\n"),
            array("This is a test", 3, 0, ""),
        );
    }
    /**
    * test
    *
    * @param string $str     The string to print out
    * @param int    $val     The required value to print
    * @param int    $verbose The current value
    * @param int    $expect  The expected stuff printed
    *
    * @return null
    *
    * @dataProvider dataVPrint
    */
    public function testVPrint($str, $val, $verbose, $expect)
    {
        ob_start();
        $this->o->vprint($str, $val, $verbose);
        $ret = ob_get_contents();
        ob_end_clean();
        $this->assertSame($expect, $ret);
    }
    /**
    * data provider for testConstructor
    *
    * @return array
    *
    * @static
    */
    public static function dataFindClass()
    {
        return array(
            array("HUGnetClass", "/base/", true),
            array("asdf", "containers", false),
        );
    }
    /**
    * test
    *
    * @param string $class  The class or object to use
    * @param stirng $dir    The directory to search
    * @param int    $expect The expected stuff printed
    *
    * @return null
    *
    * @dataProvider dataFindClass
    */
    public function testFindClass($class, $dir, $expect)
    {
        $this->assertSame($expect, HUGnetClassTestStub::findClassTest($class, $dir));
    }
}

/**
 * Test class for HUGnetDB.
 * Generated by PHPUnit on 2007-12-13 at 10:28:11.
 *
 * @category   Test
 * @package    HUGnetLibTest
 * @subpackage Database
 * @author     Scott Price <prices@hugllc.com>
 * @copyright  2007-2010 Hunt Utilities Group, LLC
 * @copyright  2009 Scott Price
 * @license    http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link       https://dev.hugllc.com/index.php/Project:HUGnetLib
 */
class HUGnetClassTestStub extends HUGnetClass
{
    /**
    * Load a class file if possible
    *
    * @param string $class The class or object to use
    * @param stirng $dir   The directory to search
    *
    * @return null
    */
    public function findClassTest($class, $dir = "")
    {
        return parent::findClass($class, $dir);
    }
}
?>
